{"version":3,"sources":["components/UI/snackBar/SnackBar.js","components/appbar/Appbar.js","components/UI/deleteIcon/DeleteIcon.js","store/actions/calendar.js","store/actions/targetList.js","store/actions/auth.js","store/actions/registerSummary.js","store/actions/snackbar.js","axios.js","components/UI/addIcon/AddIcon.js","hoc/Aux.js","components/monthSelector/MonthSelector.js","components/targetForm/TargetFormInDialog.js","components/UI/editIcon/EditIcon.js","components/UI/navigateBackIcon/NavigateBackIcon.js","components/targetsList/TargetsList.js","components/datesAndDays/Date.js","components/targetsList/AlertDialogBox.js","components/targetsList/OldTargetList.js","components/datesAndDays/DatesAndDays.js","containers/Calendar/Calender.js","containers/Auth/signin/Signin.js","containers/Auth/logout/Logout.js","components/pendingTargetsReminder/PendingTargetsReminder.js","components/charts/monthlyChart/MonthlyChart.js","components/monthlyStats/monthlyStats.js","containers/Dashboard/Dashboard.js","App.js","shared/utility.js","store/reducers/calendar.js","store/reducers/targetList.js","store/reducers/auth.js","store/reducers/registerSummary.js","store/reducers/snackbar.js","index.js","components/UI/loading/Loading.js","store/actions/actionTypes.js"],"names":["SnackBar","dispatch","useDispatch","removeSnackbar","actions","open","toJS","useSelector","state","snk","message","severity","autoHideDuration","onClose","elevation","variant","useStyles","makeStyles","theme","button","margin","paddingLeft","paddingRight","backgroundColor","color","fontWeight","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","hiNameInDrawer","position","top","marginLeft","leftIcon","Appbar","props","classes","useTheme","isAuthenticated","auth","tokenId","name","register","isSubmitting","tl","useState","setOpen","tempName","setTempName","useEffect","dashboardClickHandler","history","push","loginLogoutClickHandler","homeClickHandler","authIcon","container","justify","item","className","onClick","style","cursor","disableRipple","disabled","anchor","paper","direction","primary","DeleteIcon","deleteIcon","right","toggleDeleteIcon","setToggleDeleteIcon","deleteTargetInput","handleToggleDeleteIcon","prevState","onMouseEnter","onMouseLeave","setMonthlyDataStart","type","actionTypes","setMonthlyDataSuccess","monthlyData","setMonthlyDataFail","error","setAllMonthlyData","monthlyTargetsAchieved","setMonthlyDateData","monthlyDateData","setPrevMonthDateData","prevMonthDateData","onNextMonth","userId","year","month","axios","get","then","response","data","Object","values","localStorage","setItem","JSON","stringify","prevMoment","moment","subtract","prevYear","format","prevMonth","catch","onPrevMonth","onGetMonthlyData","parse","getItem","length","presentMoment","date","key","initCalendar","openTargetList","closeTargetList","submitOrUpdateStart","submitOrUpdateSuccess","submitOrUpdateFail","resetSubmission","postTargetFormStart","actionsTypes","postTargetFormSuccess","postTargetFormFail","postTargetFormReset","saveTargetForm","targetForm","savePrevDayPendingTargets","prevDayPendingTargets","onSubmitTargetList","noOfTargetsAcheived","noOfTargets","setSnackbar","form","formId","patch","monthData","post","onUpdateTargetList","id","oldForm","onPostTargetForm","onEditTargetForm","editedTargetForm","noOfTargetsAchieved","styleNumber","monthlyTargetsAcheivedData","splice","onGetTargetForm","prevDateContext","preDate","preMonth","preYear","prevDayTargetForm","filter","d","checked","map","target","keys","onAuthSuccess","onAuthFail","onLogout","isDayEndLogout","removeItem","checkAuthTimeout","expirationTime","setTimeout","checkDayEnd","presentTime","Date","getTime","endTime","setHours","timer","email","password","isSignup","gender","authData","returnSecureToken","url","expirationDate","expiresIn","idToken","localId","personalDetails","res","authCheckStatus","token","savePersonalDetails","onGetPersonalDetails","instance","create","baseURL","AddIcon","addIcon","marginTop","span","height","toggleAddIcon","setToggleAddIcon","addTargetInput","fontSize","handleToggle","Aux","children","MonthSelector","cal","prevMonthHandler","y","m","nextMonthHandler","months","Box","mt","Grid","xmlns","viewBox","Typography","align","userSelect","minWidth","inputField","TargetFormInDialog","lengthOfExistingTargetList","errorMessage","FormGroup","inputFields","input","i","TextField","autoFocus","label","value","onChange","event","index","inputs","targetFormChange","onInputChangeHandler","onDeleteTargetInput","editIcon","EditIcon","toggleEditIcon","setToggleEditIcon","handleToggleEditIcon","NavigateBackIcon","toggleNavigateBackIcon","setToggleNavigateBackIcon","handleToggleNavigateBackIcon","TargetsList","hasTargetList","targetList","formControlLabel","box","clickBackIconHandler","setExitingTargetList","setEditMode","DialogTitle","withStyles","root","closeButton","other","disableTypography","IconButton","editMode","loading","isTargetFormPosted","existingTargetList","addedTargetList","setAddedTargetList","disableSaveButton","setDisableSaveButton","disableEditButton","setDisableEditButton","disableSubmitButton","setDisableSubmitButton","agreedOnAddingPrevPendingTargets","c","ip","targetFormChangeHandler","handleClose","my","FormControlLabel","control","Checkbox","onCheckedHandler","onDeleteExistingTarget","dialogContentText","Button","x","Loading","size","thickness","p","editedTargetList","Dialog","fullWidth","DialogContent","DialogContentText","DialogActions","styled","border","borderRadius","currentDate","low","medium","high","allDone","currentDateStyle","Transition","React","forwardRef","ref","Slide","AlertDialogBox","closeAlert","TransitionComponent","keepMounted","typo","OldTargetList","openOldForm","setLoading","setError","dateData","setDateData","targetsAchievedList","targetsNotAchievedList","dialogContent","closeOldForm","t","StyledTableCell","head","palette","main","common","white","body","TableCell","overflowX","table","weekdays","DatesAndDays","currentMonth","currentYear","firstDayOfMonth","daysInMonth","isSubmitted","selectedDate","setSelectedDate","openAlert","setOpenAlert","setOpenOldForm","blanks","dates","totalSlots","rows","cells","forEach","row","insertRow","slice","updatedTargetForm","localData","setMonthlyTargetsAchieved","Paper","Table","TableHead","TableRow","day","TableBody","Math","random","n","getStyle","dateClicked","todayDate","diff","onDateClick","Calendar","minHeight","heading","formControl","newUser","Signin","setEmail","setPassword","showPassword","setShowPassword","maxWidth","mx","FormControl","InputLabel","htmlFor","OutlinedInput","labelWidth","endAdornment","InputAdornment","aria-label","edge","Visibility","VisibilityOff","mb","onSignin","Logout","useCallback","to","Zoom","PendingTargetsReminder","pendingTargets","setPendingTargets","MonthlyChart","this","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","verticalAlign","stroke","fillOpacity","fill","PureComponent","background","done","notDone","statsPaper","getMeLists","list","temporaryList1","temporaryList2","targetAchievedList","hasTarget","Array","from","Set","WeekViseReport","productivity","setProductivity","growthInNoOfTargetsSet","setGrowthInNoOfTargetsSet","growthInNoOfTargetsAchieved","setGrowthInNoOfTargetsAchieved","prod","toFixed","prevList","prevTargetsAchievedList","prevTargetsNotAchievedList","stat1","stat2","Dashboard","setData","tempData","currentLocalData","withRouter","Register","lazy","authCheck","getTargetForm","getMonthlyData","getPersonalDetails","routes","path","component","render","exact","fallback","updateObject","oldObject","updatedObject","initialState","dateContext","currentDateContext","isFetchingData","setNextMonth","assign","add","firstDay","startOf","setPrevMonth","reducer","submitTargetFormStart","submitTargetFormSuccess","submitTargetFormFail","onAuthStart","onSetErrorToNull","removeSnack","composeEnhancers","compose","rootReducer","combineReducers","monthSelectorReducer","targetListReducer","signinReducer","registerReducer","networkErrorReducer","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","progress","setProgress","setInterval","oldProgress","clearInterval","SET_NEXT_MONTH","SET_PREV_MONTH","INIT_CALENDAR","SET_MONTHLY_DATA_START","SET_MONTHLY_DATA_SUCCESS","SET_MONTHLY_DATA_FAIL","SET_ALL_MONTHLY_DATA","SET_MONTHLY_DATE_DATA","SET_PREV_MONTH_DATE_DATA","OPEN_TARGET_LIST","CLOSE_TARGET_LIST","SUBMIT_OR_UPDATE_TARGET_LIST_START","SUBMIT_OR_UPDATE_TARGET_LIST_SUCCESS","SUBMIT_OR_UPDATE_TARGET_LIST_FAIL","RESET_SUBMISSION","SAVE_TARGET_FORM","SAVE_PREV_DAY_PENDING_TARGET","POST_TARGET_FORM_START","POST_TARGET_FORM_SUCCESS","POST_TARGET_FORM_FAIL","POST_TARGET_FORM_RESET","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","SAVE_PERSONAL_DETAILS","LOGOUT","SET_ERROR_TO_NULL","SET_SNACKBAR","REMOVE_SNACKBAR"],"mappings":"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","file":"static/js/main.ed289371.chunk.js","sourcesContent":["import React from \"react\";\nimport {toJS} from \"mobx\"\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport * as actions from \"../../../store/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst SnackBar = () => {\n\n    const dispatch = useDispatch()\n\n    const removeSnackbar = () => dispatch(actions.removeSnackbar())\n\n    const open = toJS(useSelector(state => state.snk.open))\n    const message = toJS(useSelector(state => state.snk.message))\n    const severity = toJS(useSelector(state => state.snk.severity))\n    const autoHideDuration = toJS(useSelector(state => state.snk.autoHideDuration))\n\n    return (\n        <Snackbar open={open}\n                  autoHideDuration={autoHideDuration ? autoHideDuration : 1000}\n                  onClose={removeSnackbar}>\n            <MuiAlert\n                elevation={6}\n                variant={\"filled\"}\n                onClose={removeSnackbar}\n                severity={(severity !== \"\") ? severity : \"info\"}>\n                {message}\n            </MuiAlert>\n        </Snackbar>\n    )\n}\n\nexport default SnackBar\n","import React, {useEffect, useState} from 'react'\nimport './Appbar.css'\nimport {AppBar, Grid, Toolbar, Button} from '@material-ui/core'\nimport {useSelector} from \"react-redux\";\nimport Aux from \"../../hoc/Aux\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport DateRangeRoundedIcon from '@material-ui/icons/DateRangeRounded';\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\nimport TimelineRoundedIcon from '@material-ui/icons/TimelineRounded';\nimport ContactSupportRoundedIcon from '@material-ui/icons/ContactSupportRounded';\nimport AdbRoundedIcon from '@material-ui/icons/AdbRounded';\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\n\nconst drawerWidth = 240;\n\nconst useStyles = (makeStyles(theme => ({\n    button: {\n        margin: 2,\n        paddingLeft: 20,\n        paddingRight: 20,\n        \"&:hover\": {\n            backgroundColor: \"white\",\n            color: \"purple\",\n            fontWeight: \"bold\"\n        }\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n    hiNameInDrawer: {\n        display: \"inline-block\",\n        position: \"relative\",\n        top: 1,\n        marginLeft: 5\n    },\n    leftIcon: {\n        color:\"white\",\n        // position: \"relative\",\n        // top: 7\n    }\n})))\n\nconst Appbar = (props) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const isAuthenticated = useSelector(state => state.auth.tokenId !== null)\n    const name = useSelector(state => state.register.name)\n    const isSubmitting = useSelector(state => state.tl.isSubmitting)\n\n    const [open, setOpen] = useState(false);\n    const [tempName, setTempName] = useState(\"Bug\")\n\n    useEffect(() => {\n        if (name !== null) {\n            setTempName(name)\n        } else {\n            setTempName(\"Bug\")\n        }\n    }, [name])\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n\n    const dashboardClickHandler = () => {\n        props.history.push('/dashboard')\n    }\n\n    const onLogoClickHandler = () => {\n        props.history.push('/')\n    }\n\n    const loginClickHandler = () => {\n        if (!isAuthenticated) {\n            props.history.push('/signin')\n        }\n    }\n\n    const loginLogoutClickHandler = () => {\n        if (!isAuthenticated) {\n            props.history.push('/signin')\n        } else {\n            props.history.push('/logout')\n        }\n    }\n\n    const homeClickHandler = () => {\n        props.history.push('/')\n    }\n\n    const myCalendarClickHandler = () => {\n        props.history.push('/')\n    }\n\n    let authIcon = <AdbRoundedIcon/>\n    if (isAuthenticated) {\n        authIcon = <AccountCircleRoundedIcon/>\n    }\n\n    return (\n        <Aux>\n            <AppBar position='static'>\n                <Toolbar>\n                    <Grid container justify={\"space-between\"}>\n                        <Grid item>\n                            <Button\n                                className={classes.button}\n                                onClick={onLogoClickHandler}\n                                style={{cursor: \"default\"}}\n                                color={\"inherit\"}\n                                disableRipple>\n                                Karyaanvya\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <div className={\"appbar-buttons\"}>\n                                <Button\n                                    onClick={homeClickHandler}\n                                    className={classes.button}\n                                    color={\"inherit\"}>\n                                    Home\n                                </Button>\n                                <Button\n                                    onClick={homeClickHandler}\n                                    className={classes.button}\n                                    color={\"inherit\"}>\n                                    My&nbsp;Calendar\n                                </Button>\n                                <Button\n                                    onClick={dashboardClickHandler}\n                                    className={classes.button}\n                                    color={\"inherit\"}>\n                                    Dashboard\n                                </Button>\n                                <Button\n                                    className={classes.button}\n                                    color={\"inherit\"}>\n                                    Analysis\n                                </Button>\n                                <Button\n                                    className={classes.button}\n                                    color={\"inherit\"}>\n                                    Contact&nbsp;Us\n                                </Button>\n                                <Button\n                                    disabled={isSubmitting}\n                                    className={classes.button}\n                                    onClick={loginLogoutClickHandler}\n                                    color=\"inherit\">\n                                    {isAuthenticated ? \"Logout\" : \"Login/Signup\"}\n                                </Button>\n                            </div>\n                            <div className={\"appbar-drawer\"}>\n                                <Box>\n                                    <Button\n                                        onClick={loginClickHandler}\n                                        disableRipple={isAuthenticated}\n                                        color={\"inherit\"}\n                                        style={isAuthenticated ? {cursor: \"default\"} : {cursor: \"pointer\"}}>\n                                        {isAuthenticated ? `Hi, ${tempName}` : \"Login\"}\n                                    </Button>\n                                    <IconButton onClick={handleDrawerOpen}>\n                                        <ChevronLeftIcon className={classes.leftIcon}/>\n                                    </IconButton>\n                                </Box>\n                                <Drawer\n                                    className={classes.drawer}\n                                    variant=\"temporary\"\n                                    anchor=\"right\"\n                                    open={open}\n                                    classes={{\n                                        paper: classes.drawerPaper,\n                                    }}\n                                >\n                                    <div className={classes.drawerHeader}>\n                                        <Box>\n                                            <IconButton onClick={handleDrawerClose}>\n                                                {theme.direction === 'rtl' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\n                                            </IconButton>\n                                            <Typography className={classes.hiNameInDrawer}>\n                                                Hi,&nbsp;{tempName}\n                                            </Typography>\n                                        </Box>\n                                    </div>\n                                    <Divider/>\n                                    <List>\n                                        <ListItem button onClick={homeClickHandler}>\n                                            <ListItemIcon><HomeRoundedIcon/></ListItemIcon>\n                                            <ListItemText primary={\"Home\"}/>\n                                        </ListItem>\n                                        <ListItem button onClick={myCalendarClickHandler}>\n                                            <ListItemIcon><DateRangeRoundedIcon/></ListItemIcon>\n                                            <ListItemText primary={\"My Calendar\"}/>\n                                        </ListItem>\n                                        <ListItem button onClick={dashboardClickHandler}>\n                                            <ListItemIcon><DashboardRoundedIcon/></ListItemIcon>\n                                            <ListItemText primary={\"Dashboard\"}/>\n                                        </ListItem>\n                                        <ListItem button>\n                                            <ListItemIcon><TimelineRoundedIcon/></ListItemIcon>\n                                            <ListItemText primary={\"Analysis\"}/>\n                                        </ListItem>\n                                        <ListItem button>\n                                            <ListItemIcon><ContactSupportRoundedIcon/></ListItemIcon>\n                                            <ListItemText primary={\"Contact us\"}/>\n                                        </ListItem>\n                                        <ListItem button onClick={loginLogoutClickHandler}>\n                                            <ListItemIcon>{authIcon}</ListItemIcon>\n                                            <ListItemText primary={isAuthenticated ? \"Logout\" : \"Login/Signup\"}/>\n                                        </ListItem>\n                                    </List>\n                                </Drawer>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </Aux>\n    )\n}\n\nexport default Appbar\n","import React, {useState} from \"react\";\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\nimport CancelTwoToneIcon from '@material-ui/icons/CancelTwoTone';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst DeleteIcon = (props) => {\n\n    const useStyles = makeStyles(theme => ({\n        deleteIcon: {\n            display: props.display ? props.display : \"inline-block\",\n            position: \"relative\",\n            right: (props.right) ? props.right : 0,\n            top: (props.top) ? props.top : 30,\n            cursor: \"pointer\"\n        },\n    }))\n\n    const classes = useStyles()\n\n    let deleteIcon;\n\n    const [toggleDeleteIcon, setToggleDeleteIcon] = useState(true)\n\n    if (toggleDeleteIcon) {\n        deleteIcon = <CancelTwoToneIcon\n            onClick={props.deleteTargetInput}\n            className={classes.deleteIcon}/>\n    } else {\n        deleteIcon = <CancelRoundedIcon\n            onClick={props.deleteTargetInput}\n            className={classes.deleteIcon}/>\n    }\n\n    const handleToggleDeleteIcon = () => {\n        setToggleDeleteIcon(prevState => !prevState)\n    }\n\n    return (\n        <span onMouseEnter={handleToggleDeleteIcon} onMouseLeave={handleToggleDeleteIcon}>\n            {deleteIcon}\n        </span>\n    )\n}\n\nexport default DeleteIcon\n","import * as actionTypes from './actionTypes'\nimport axios from \"../../axios\";\nimport * as actions from './index'\nimport moment from \"moment\";\n\nexport const setMonthlyDataStart = () => {\n    return {\n        type: actionTypes.SET_MONTHLY_DATA_START\n    }\n}\n\nexport const setMonthlyDataSuccess = monthlyData => {\n    return {\n        type: actionTypes.SET_MONTHLY_DATA_SUCCESS,\n        monthlyData: monthlyData\n    }\n}\n\nexport const setMonthlyDataFail = (error) => {\n    return {\n        type: actionTypes.SET_MONTHLY_DATA_FAIL,\n        error: error\n    }\n}\n\nexport const setAllMonthlyData = (monthlyTargetsAchieved, monthlyData) => {\n    return {\n        type: actionTypes.SET_ALL_MONTHLY_DATA,\n        monthlyData: monthlyData,\n        monthlyTargetsAchieved: monthlyTargetsAchieved\n    }\n}\n\nexport const setMonthlyDateData = monthlyDateData => {\n    return {\n        type: actionTypes.SET_MONTHLY_DATE_DATA,\n        monthlyDateData: monthlyDateData\n    }\n}\n\nexport const setPrevMonthDateData = prevMonthDateData => {\n    return {\n        type: actionTypes.SET_PREV_MONTH_DATE_DATA,\n        prevMonthDateData: prevMonthDateData\n    }\n}\n\nexport const setNextMonth = () => {\n    return {\n        type: actionTypes.SET_NEXT_MONTH,\n    }\n}\n\nexport const setPrevMonth = () => {\n    return {\n        type: actionTypes.SET_PREV_MONTH,\n    }\n}\n\nexport const onNextMonth = (userId, year, month) => {\n    return dispatch => {\n        dispatch(setNextMonth())\n        if (userId) {\n            dispatch(setAllMonthlyData(null, []))\n            dispatch(setMonthlyDataStart())\n            dispatch(setMonthlyDateData({}))\n            dispatch(setPrevMonthDateData({}))\n            dispatch(actions.setSnackbar(\"Fetching data\", \"info\", 50000))\n            axios.get(`${userId}/monthlyData/${year}/${month}.json`)\n                .then(response => {\n                    if (response.data !== null) {\n                        const data = Object.values(response.data)\n                        dispatch(setMonthlyDataSuccess(data))\n                        return axios.get(`/${userId}/dateData/${year}/${month}.json`)\n                            .then(response => {\n                                if (response.data) {\n                                    localStorage.setItem(\"monthlyDateData\", JSON.stringify(response.data))\n                                    dispatch(setMonthlyDateData(response.data))\n                                    const presentMoment = moment([year, month])\n                                    const prevMoment = presentMoment.subtract(1, \"month\")\n                                    const prevYear = prevMoment.format(\"Y\")\n                                    const prevMonth = prevMoment.month()\n                                    return axios.get(`/${userId}/dateData/${prevYear}/${prevMonth}.json`)\n                                        .then(response => {\n                                            if (response.data) {\n                                                localStorage.setItem(\"prevMonthDateData\", JSON.stringify(response.data))\n                                                dispatch(setPrevMonthDateData(response.data))\n                                                dispatch(actions.setSnackbar(\"Ready\", \"success\"))\n                                            } else {\n                                                dispatch(actions.setSnackbar(\"Ready\", \"success\"))\n                                            }\n                                        })\n                                } else {\n                                    dispatch(actions.removeSnackbar())\n                                }\n                            })\n                    } else {\n                        dispatch(actions.removeSnackbar())\n                    }\n                }).catch(error => {\n                if (error.response) {\n                    dispatch(setMonthlyDataFail(error.response.data.error))\n                } else {\n                    dispatch(setMonthlyDataFail(\"\"))\n                    dispatch(actions.setSnackbar(\"Internet disconnected\", \"error\"))\n                }\n            })\n        }\n    }\n}\n\nexport const onPrevMonth = (userId, year, month) => {\n    return dispatch => {\n        dispatch(setPrevMonth())\n        if (userId) {\n            dispatch(setAllMonthlyData(null, []))\n            dispatch(setMonthlyDataStart())\n            dispatch(setMonthlyDateData({}))\n            dispatch(setPrevMonthDateData({}))\n            dispatch(actions.setSnackbar(\"Fetching data\", \"info\", 50000))\n            axios.get(`${userId}/monthlyData/${year}/${month}.json`)\n                .then(response => {\n                    if (response.data !== null) {\n                        const data = Object.values(response.data)\n                        dispatch(setMonthlyDataSuccess(data))\n                        return axios.get(`/${userId}/dateData/${year}/${month}.json`)\n                            .then(response => {\n                                if (response.data) {\n                                    localStorage.setItem(\"monthlyDateData\", JSON.stringify(response.data))\n                                    dispatch(setMonthlyDateData(response.data))\n                                    const presentMoment = moment([year, month])\n                                    const prevMoment = presentMoment.subtract(1, \"month\")\n                                    const prevYear = prevMoment.format(\"Y\")\n                                    const prevMonth = prevMoment.month()\n                                    return axios.get(`/${userId}/dateData/${prevYear}/${prevMonth}.json`)\n                                        .then(response => {\n                                            if (response.data) {\n                                                localStorage.setItem(\"prevMonthDateData\", JSON.stringify(response.data))\n                                                dispatch(setPrevMonthDateData(response.data))\n                                                dispatch(actions.setSnackbar(\"Ready\", \"success\"))\n                                            } else {\n                                                dispatch(actions.setSnackbar(\"Ready\", \"success\"))\n                                            }\n                                        })\n                                } else {\n                                    dispatch(actions.removeSnackbar())\n                                }\n                            })\n                    } else {\n                        dispatch(actions.removeSnackbar())\n                    }\n                }).catch(error => {\n                if (error.response) {\n                    dispatch(setMonthlyDataFail(error.response.data.error))\n                } else {\n                    dispatch(setMonthlyDataFail(\"\"))\n                    dispatch(actions.setSnackbar(\"Internet disconnected\", \"error\"))\n                }\n            })\n        }\n    }\n}\n\nexport const onGetMonthlyData = (userId) => {\n    return dispatch => {\n        const monthlyTargetsAchieved = JSON.parse(localStorage.getItem('monthlyTargetsAchieved') || null)\n        const monthlyData = JSON.parse(localStorage.getItem(\"monthlyData\") || \"[]\")\n        const monthlyDateData = JSON.parse(localStorage.getItem(\"monthlyDateData\") || null)\n        const prevMonthDateData = JSON.parse(localStorage.getItem(\"prevMonthDateData\") || null)\n        if (!monthlyData.length && userId && !monthlyDateData) {\n            dispatch(actions.setSnackbar(\"Fetching data\", \"info\", 50000))\n            const presentMoment = moment()\n            const year = presentMoment.format(\"Y\")\n            const month = presentMoment.month()\n            const date = presentMoment.get(\"date\")\n            const prevMoment = presentMoment.subtract(1, \"month\")\n            const prevYear = prevMoment.format(\"Y\")\n            const prevMonth = prevMoment.month()\n            axios.get(`/${userId}/monthlyData/${year}/${month}.json`)\n                .then(response => {\n                    if (response.data) {\n                        const data = Object.values(response.data)\n                        localStorage.setItem(\"monthlyData\", JSON.stringify(data))\n                        for (let key in response.data) {\n                            if (response.data[key].date === date) {\n                                localStorage.setItem(\"id\", key)\n                            }\n                        }\n                        dispatch(actions.setMonthlyDataSuccess(data))\n                        return axios.get(`/${userId}/dateData/${year}/${month}.json`)\n                            .then(response => {\n                                if (response.data) {\n                                    localStorage.setItem(\"monthlyDateData\", JSON.stringify(response.data))\n                                    dispatch(setMonthlyDateData(response.data))\n                                    return axios.get(`/${userId}/dateData/${prevYear}/${prevMonth}.json`)\n                                        .then(response => {\n                                            if (response.data) {\n                                                localStorage.setItem(\"prevMonthDateData\", JSON.stringify(response.data))\n                                                dispatch(setPrevMonthDateData(response.data))\n                                            }\n                                        })\n                                }\n                            })\n                    }\n                }).catch(error => {\n                if (error.response) {\n                    dispatch(actions.setSnackbar(`${error.response.data.error}`, \"error\"))\n\n                } else {\n                    dispatch(actions.setSnackbar(\"Internet disconnected\", \"error\"))\n                }\n            })\n        } else {\n            dispatch(setAllMonthlyData(monthlyTargetsAchieved, monthlyData))\n            dispatch(setMonthlyDateData(monthlyDateData))\n            dispatch(setPrevMonthDateData(prevMonthDateData))\n        }\n    }\n}\n\nexport const initCalendar = () => {\n    return {\n        type: actionTypes.INIT_CALENDAR\n    }\n}\n","import * as actionTypes from '../actions/actionTypes'\nimport axios from '../../axios'\nimport {setSnackbar} from '../actions/index'\nimport * as actions from \"./index\";\nimport moment from \"moment\";\nimport * as actionsTypes from \"./actionTypes\";\n\nconst year = moment().format(\"Y\")\nconst month = moment().month()\nconst date = moment().get(\"date\")\n\nexport const openTargetList = () => {\n    return {\n        type: actionTypes.OPEN_TARGET_LIST\n    }\n}\n\nexport const closeTargetList = () => {\n    return {\n        type: actionTypes.CLOSE_TARGET_LIST\n    }\n}\n\nconst submitOrUpdateStart = () => {\n    return {\n        type: actionTypes.SUBMIT_OR_UPDATE_TARGET_LIST_START\n    }\n}\n\nconst submitOrUpdateSuccess = () => {\n    return {\n        type: actionTypes.SUBMIT_OR_UPDATE_TARGET_LIST_SUCCESS\n    }\n}\n\nconst submitOrUpdateFail = (error) => {\n    return {\n        type: actionTypes.SUBMIT_OR_UPDATE_TARGET_LIST_FAIL,\n        error: error\n    }\n}\n\nexport const resetSubmission = () => {\n    return {\n        type: actionTypes.RESET_SUBMISSION\n    }\n}\n\nconst postTargetFormStart = () => {\n    return {\n        type: actionsTypes.POST_TARGET_FORM_START\n    }\n}\n\nconst postTargetFormSuccess = () => {\n    return {\n        type: actionsTypes.POST_TARGET_FORM_SUCCESS,\n    }\n}\n\nconst postTargetFormFail = error => {\n    return {\n        type: actionsTypes.POST_TARGET_FORM_FAIL,\n        error: error\n    }\n}\n\nexport const postTargetFormReset = () => {\n    return {\n        type: actionsTypes.POST_TARGET_FORM_RESET\n    }\n}\n\nexport const saveTargetForm = targetForm => {\n    return {\n        type: actionsTypes.SAVE_TARGET_FORM,\n        targetForm: targetForm\n    }\n}\n\nconst savePrevDayPendingTargets = prevDayPendingTargets => {\n    return {\n        type: actionsTypes.SAVE_PREV_DAY_PENDING_TARGET,\n        prevDayPendingTargets: prevDayPendingTargets\n    }\n}\n\nexport const onSubmitTargetList = (userId, targetForm, noOfTargetsAcheived, noOfTargets) => {\n    return dispatch => {\n        dispatch(setSnackbar(\"Submitting\", \"info\", 50000))\n        dispatch(submitOrUpdateStart())\n        const form = {\n            targetForm: targetForm\n        }\n        const formId = localStorage.getItem(\"formId\")\n        axios.patch(`${userId}/dateData/${year}/${month}/${date}/${formId}.json`, form)\n            .then(response => {\n                const monthData = {\n                    date: date,\n                    noOfTargetsAcheived: noOfTargetsAcheived,\n                    noOfTargets: noOfTargets\n                }\n                return axios.post(`/${userId}/monthlyData/${year}/${month}.json`, monthData)\n                    .then(response => {\n                        dispatch(setSnackbar(\"Submitted\", \"success\"))\n                        dispatch(submitOrUpdateSuccess())\n                        dispatch(actions.saveTargetForm(targetForm))\n                        localStorage.setItem(\"id\", response.data.name)\n                    })\n            }).catch(error => {\n            if (error.response) {\n                dispatch(submitOrUpdateFail(error.response.data.error))\n            } else {\n                dispatch(setSnackbar(\"Internet disconnected\", \"error\"))\n            }\n        })\n    }\n}\n\nexport const onUpdateTargetList = (userId, targetForm, noOfTargetsAcheived, noOfTargets) => {\n    return dispatch => {\n        const id = localStorage.getItem(\"id\")\n        const formId = localStorage.getItem(\"formId\")\n        dispatch(setSnackbar(\"Updating\", \"info\", 50000))\n        dispatch(submitOrUpdateStart())\n        const monthData = {\n            date: date,\n            noOfTargetsAcheived: noOfTargetsAcheived,\n            noOfTargets: noOfTargets\n        }\n        axios.patch(`/${userId}/monthlyData/${year}/${month}/${id}.json`, monthData)\n            .then(response => {\n                const oldForm = {\n                    targetForm: targetForm\n                }\n                return axios.patch(`${userId}/dateData/${year}/${month}/${date}/${formId}.json`, oldForm)\n                    .then(response => {\n                        dispatch(setSnackbar(\"Updated\", \"success\"))\n                        dispatch(submitOrUpdateSuccess())\n                        dispatch(actions.saveTargetForm(targetForm))\n                    })\n            }).catch(error => {\n            if (error.response) {\n                dispatch(submitOrUpdateFail(error.response.data.error))\n            } else {\n                dispatch(setSnackbar(\"Internet disconnected\", \"error\"))\n            }\n        })\n    }\n}\n\nexport const onPostTargetForm = (userId, targetForm) => {\n    return dispatch => {\n        if (targetForm.length) {\n            dispatch(postTargetFormStart())\n            const data = {\n                targetForm: targetForm\n            }\n            axios.post(`${userId}/dateData/${year}/${month}/${date}.json`, data)\n                .then(response => {\n                    dispatch(saveTargetForm(targetForm))\n                    dispatch(savePrevDayPendingTargets([]))\n                    dispatch(postTargetFormSuccess())\n                    localStorage.setItem(\"formId\", response.data.name)\n                }).catch(error => {\n                if (error.response) {\n                    dispatch(postTargetFormFail(error.response.data.error))\n                } else {\n                    dispatch(actions.setSnackbar(\"Internet disconnected\", \"error\"))\n                }\n            })\n        }\n    }\n}\n\nexport const onEditTargetForm = (userId, editedTargetForm, noOfTargetsAchieved, noOfTargets) => {\n    return dispatch => {\n        dispatch(postTargetFormStart())\n        const data = {\n            targetForm: editedTargetForm\n        }\n        const id = localStorage.getItem(\"id\")\n        const formId = localStorage.getItem(\"formId\")\n        if (formId) {\n            axios.patch(`${userId}/dateData/${year}/${month}/${date}/${formId}.json`, data)\n                .then(response => {\n                    dispatch(saveTargetForm(editedTargetForm))\n                    localStorage.setItem(\"targetForm\", JSON.stringify(editedTargetForm))\n                    if (id) {\n                        const monthData = {\n                            date: date,\n                            noOfTargetsAcheived: noOfTargetsAchieved,\n                            noOfTargets: noOfTargets\n                        }\n                        return axios.patch(`/${userId}/monthlyData/${year}/${month}/${id}.json`, monthData)\n                            .then(response => {\n                                const styleNumber = (noOfTargetsAchieved / noOfTargets) * 3\n                                const monthlyTargetsAchieved = JSON.parse(localStorage.getItem(\"monthlyTargetsAchieved\"))\n                                const monthlyTargetsAcheivedData = [...monthlyTargetsAchieved]\n                                monthlyTargetsAcheivedData.splice(date, 1, styleNumber)\n                                dispatch(actions.setAllMonthlyData(monthlyTargetsAcheivedData))\n                                dispatch(postTargetFormSuccess())\n                            })\n                    } else {\n                        dispatch(postTargetFormSuccess())\n                    }\n                }).catch(error => {\n                if (error.response) {\n                    dispatch(postTargetFormFail(error.response.data.error))\n                    dispatch(actions.setSnackbar(error.response.data.error.message, \"error\"))\n                } else {\n                    dispatch(actions.setSnackbar(\"Internet disconnected\", \"error\"))\n                }\n            })\n        }\n    }\n}\n\nexport const onGetTargetForm = (userId) => {\n    return dispatch => {\n        const targetForm = JSON.parse(localStorage.getItem('targetForm') || \"[]\");\n        const prevDayPendingTargets = JSON.parse(localStorage.getItem(\"prevDayPendingTargets\") || \"[]\")\n        if (!targetForm.length && userId) {\n            axios.get(`${userId}/dateData/${year}/${month}/${date}.json`)\n                .then(response => {\n                    if (response.data) {\n                        localStorage.setItem(\"formId\", Object.keys(response.data)[0])\n                        const targetForm = Object.values(response.data)[0].targetForm\n                        dispatch(saveTargetForm(targetForm))\n                        localStorage.setItem('targetForm', JSON.stringify(targetForm))\n                        dispatch(actions.setSnackbar(\"Ready\", \"success\"))\n                    } else {\n                        const prevDateContext = moment().subtract(1, 'day')\n                        const preDate = prevDateContext.get(\"date\")\n                        const preMonth = prevDateContext.month()\n                        const preYear = prevDateContext.format(\"Y\")\n                        return axios.get(`${userId}/dateData/${preYear}/${preMonth}/${preDate}.json`)\n                            .then(response => {\n                                if (response.data) {\n                                    let prevDayPendingTargets = [];\n                                    const prevDayTargetForm = Object.values(response.data)[0].targetForm\n                                    prevDayTargetForm.filter(d => !d.checked)\n                                    prevDayTargetForm.map(target => {\n                                        if (!target.checked) {\n                                            prevDayPendingTargets.push(target)\n                                        }\n                                        return 0;\n                                    })\n                                    localStorage.setItem(\"prevDayPendingTargets\", JSON.stringify(prevDayPendingTargets))\n                                    dispatch(savePrevDayPendingTargets(prevDayPendingTargets))\n                                    dispatch(actions.setSnackbar(\"Ready\", \"success\"))\n                                } else {\n                                    dispatch(actions.removeSnackbar())\n                                }\n                            })\n                    }\n                })\n        } else {\n            dispatch(saveTargetForm(targetForm))\n            dispatch(savePrevDayPendingTargets(prevDayPendingTargets))\n        }\n    }\n}\n","import * as actionTypes from './actionTypes'\nimport axios from \"../../axios\";\nimport * as actions from './index'\n\nexport const onAuthStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const onAuthSuccess = (tokenId, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        tokenId: tokenId,\n        userId: userId\n    }\n}\n\nexport const onAuthFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nconst logout = () => {\n    return {\n        type: actionTypes.LOGOUT\n    }\n}\n\nexport const onLogout = (isDayEndLogout) => {\n    return dispatch => {\n        if (isDayEndLogout) {\n            localStorage.removeItem(\"id\")\n            localStorage.removeItem(\"formId\")\n        }\n        localStorage.removeItem('tokenId');\n        localStorage.removeItem('expirationDate');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('targetForm');\n        localStorage.removeItem(\"prevDayPendingTargets\")\n        localStorage.removeItem(\"agreedOnAddingPrevPendingTargets\")\n        localStorage.removeItem('name')\n        localStorage.removeItem('gender')\n        localStorage.removeItem('email')\n        localStorage.removeItem('monthlyTargetsAchieved')\n        localStorage.removeItem('monthlyData')\n        localStorage.removeItem('monthlyDateData')\n        localStorage.removeItem('prevMonthDateData')\n        localStorage.removeItem('formId')\n        localStorage.removeItem('id')\n        dispatch(actions.setAllMonthlyData(null, []))\n        dispatch(actions.savePersonalDetails(\"\", \"\", \"\"))\n        dispatch(actions.saveTargetForm([]))\n        dispatch(actions.setMonthlyDateData({}))\n        dispatch(actions.setPrevMonthDateData({}))\n        dispatch(logout())\n    }\n}\n\nconst checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(onLogout(false))\n        }, expirationTime * 1000)\n    }\n}\n\nconst checkDayEnd = () => {\n    const presentTime = new Date().getTime();\n    let endTime = new Date();\n    endTime.setHours(23, 59, 59, 999)\n    endTime = endTime.getTime()\n    const timer = endTime - presentTime\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(onLogout(true))\n            dispatch(actions.initCalendar())\n        }, timer)\n    }\n}\n\nexport const auth = (email, password, isSignup, name, gender) => {\n    return dispatch => {\n        if(isSignup){\n            localStorage.setItem('name', name)\n            localStorage.setItem('gender', gender)\n            localStorage.setItem('email', email)\n        }\n        dispatch(onAuthStart())\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n\n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAQlHvQ-sYzBZVQaXYhRdkOopWlwT24tmA\"\n        if (!isSignup) {\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAQlHvQ-sYzBZVQaXYhRdkOopWlwT24tmA\"\n        }\n        axios.post(url, authData)\n            .then(response => {\n                const expirationDate = new Date(new Date().getTime() +\n                    response.data.expiresIn * 1000);\n                localStorage.setItem(\"tokenId\", response.data.idToken);\n                localStorage.setItem(\"userId\", response.data.localId);\n                localStorage.setItem(\"expirationDate\", expirationDate);\n                const userId = response.data.localId\n                dispatch(onAuthSuccess(response.data.idToken, response.data.localId))\n                dispatch(checkAuthTimeout(response.data.expiresIn))\n                dispatch(checkDayEnd())\n\n                if (isSignup) {\n                    const personalDetails = {\n                        name: name,\n                        gender: gender,\n                        email: email\n                    }\n                    return axios.post(`/${userId}/personalDetails.json`, personalDetails)\n                        .then(res => {\n                            dispatch(actions.savePersonalDetails(name, gender, email))\n                        })\n                        .catch(error => {\n                            if (error.response) {\n                                dispatch(actions.setSnackbar(`${error.response.data.error}`, \"error\"))  \n                            } else {\n                                dispatch(actions.setSnackbar(\"Internet disconnected\", \"error\"))\n                            }\n                        })\n                }\n            })\n            .catch(error => {\n                if (error.response) {\n                    dispatch(onAuthFail(error.response.data.error))\n                } else {\n                    dispatch(onAuthFail(\"\"))\n                    dispatch(actions.setSnackbar(\"Internet disconnected\", \"error\"))\n                }\n            })\n    }\n}\n\nexport const authCheckStatus = () => {\n    return dispatch => {\n        const token = localStorage.getItem('tokenId')\n        if (!token) {\n            dispatch(onLogout(false))\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(onLogout(false))\n            } else {\n                const userId = localStorage.getItem('userId')\n                dispatch(onAuthSuccess(token, userId))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n                dispatch(checkDayEnd())\n            }\n        }\n    }\n}\n","import * as actionsTypes from './actionTypes'\nimport axios from '../../axios'\n\nexport const savePersonalDetails = (name, gender, email) => {\n    return {\n        type: actionsTypes.SAVE_PERSONAL_DETAILS,\n        name: name,\n        gender: gender,\n        email: email,\n    }\n}\n\nexport const onGetPersonalDetails = (userId) => {\n    return dispatch => {\n        const name = localStorage.getItem('name')\n        const gender = localStorage.getItem('gender')\n        const email = localStorage.getItem('email')\n        if (!name && userId) {\n            axios.get(`/${userId}/personalDetails.json`)\n                .then(response => {\n                    if (response.data) {\n                        const name = Object.values(response.data)[0].name\n                        const gender = Object.values(response.data)[0].gender\n                        const email = Object.values(response.data)[0].email\n                        localStorage.setItem(\"name\", name)\n                        dispatch(savePersonalDetails(name, gender, email))\n                    }\n                })\n        } else {\n            localStorage.removeItem('gender')\n            localStorage.removeItem('email')\n            dispatch(savePersonalDetails(name, gender, email))\n        }\n    }\n}\n","import * as actionTypes from './actionTypes'\n\nexport const setSnackbar = (message, severity, autoHideDuration) => {\n    return {\n        type: actionTypes.SET_SNACKBAR,\n        message: message,\n        severity: severity,\n        autoHideDuration: autoHideDuration\n    }\n}\n\nexport const removeSnackbar = () => {\n    return {\n        type: actionTypes.REMOVE_SNACKBAR\n    }\n}\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://target-tracker-963de.firebaseio.com/'\n})\n\nexport default instance\n","import React, {useState} from \"react\";\nimport AddCircleTwoToneIcon from '@material-ui/icons/AddCircleTwoTone';\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst AddIcon = (props) => {\n\n    const useStyles = makeStyles(theme => ({\n        addIcon: {\n            display: props.display ? props.display : \"inline-block\",\n            marginTop: 10,\n            cursor: \"pointer\"\n        },\n        span: {\n            height: 40,\n            width: 30\n        }\n    }))\n\n    const classes = useStyles()\n\n    let addIcon;\n\n    const [toggleAddIcon, setToggleAddIcon] = useState(true)\n\n    if (toggleAddIcon) {\n        addIcon = <AddCircleTwoToneIcon\n            className={classes.addIcon}\n            onClick={props.addTargetInput}\n            fontSize={\"large\"}/>\n    } else {\n        addIcon = <AddCircleRoundedIcon\n            className={classes.addIcon}\n            onClick={props.addTargetInput}\n            fontSize={\"large\"}/>\n    }\n\n    const handleToggle = () => {\n        setToggleAddIcon(prevState => !prevState)\n    }\n\n    return (\n        <span className={classes.span} onMouseEnter={handleToggle} onMouseLeave={handleToggle}>\n            {addIcon}\n        </span>\n    )\n}\n\nexport default AddIcon\n","const Aux = (props) => props.children;\n\nexport default Aux;","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport * as actions from '../../store/actions'\nimport {Grid, Typography, Box} from '@material-ui/core';\nimport Aux from '../../hoc/Aux';\nimport moment from \"moment\";\n\nconst MonthSelector = () => {\n\n    const dispatch = useDispatch();\n\n    const userId = useSelector(state => state.auth.userId);\n    const month = useSelector(state => state.cal.month)\n    const year = useSelector(state => state.cal.year)\n\n    const isSubmitting = useSelector(state => state.tl.isSubmitting)\n\n    const onPrevMonth = (year, month) => dispatch(actions.onPrevMonth(userId, year, month));\n    const onNextMonth = (year, month) => dispatch(actions.onNextMonth(userId, year, month));\n\n    const prevMonthHandler = (year, month) => {\n        if (!isSubmitting) {\n            let y = year\n            let m = month\n            if (month === 0) {\n                m = 11\n                y = y - 1\n            } else {\n                m = m - 1\n            }\n            onPrevMonth(y, m)\n        }\n    }\n\n    const nextMonthHandler = (year, month) => {\n        if (!isSubmitting) {\n            let y = year\n            let m = month\n            if (month === 11) {\n                m = 0\n                y = y + 1\n            } else {\n                m = m + 1\n            }\n            onNextMonth(y, m)\n        }\n    }\n\n    const months = moment.months();\n\n    return (\n        <Aux>\n            <Box mt={2}>\n                <Grid container justify={\"center\"}>\n                    <Grid item>\n                        <svg\n                            style={{cursor: \"pointer\"}}\n                            onClick={() => prevMonthHandler(year, month)}\n                            xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"7 3 18 18\">\n                            <path\n                                d=\"M14.71 15.88L10.83 12l3.88-3.88c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L8.71 11.3c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .38-.39.39-1.03 0-1.42z\"/>\n                        </svg>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h5\" align={\"center\"} style={{userSelect: \"none\", minWidth: 180}}>\n                            {months[month]}&nbsp;{year}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <svg\n                            style={{cursor: \"pointer\"}}\n                            onClick={() => nextMonthHandler(year, month)}\n                            xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 3 18 18\">\n                            <path\n                                d=\"M9.29 15.88L13.17 12 9.29 8.12c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0l4.59 4.59c.39.39.39 1.02 0 1.41L10.7 17.3c-.39.39-1.02.39-1.41 0-.38-.39-.39-1.03 0-1.42z\"/>\n                        </svg>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Aux>\n    )\n}\n\nexport default MonthSelector;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport AddIcon from \"../UI/addIcon/AddIcon\";\nimport DeleteIcon from \"../UI/deleteIcon/DeleteIcon\";\nimport Aux from \"../../hoc/Aux\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n    inputField: {\n        width: `75%`\n    },\n    error: {\n        margin: 10\n    }\n}))\n\nconst TargetFormInDialog = (props) => {\n\n    let {lengthOfExistingTargetList} = props\n\n    lengthOfExistingTargetList = lengthOfExistingTargetList ? lengthOfExistingTargetList : 0\n\n    const onInputChangeHandler = (event, index) => {\n        const inputs = [...props.inputFields]\n        const input = inputs[index]\n        input.value = event.target.value\n        inputs.splice(index, 1, input)\n        props.targetFormChange(inputs)\n    }\n\n    const onAddTargetInput = () => {\n        const newInput = {\n            name: \"Target\",\n            value: \"\",\n            checked: false\n        }\n        const inputs = [...props.inputFields]\n        inputs.push(newInput)\n        props.targetFormChange(inputs)\n    }\n\n    const onDeleteTargetInput = (index) => {\n        const inputs = [...props.inputFields]\n        inputs.splice(index, 1)\n        props.targetFormChange(inputs)\n    }\n\n    const classes = useStyles()\n\n    let errorMessage = null;\n    if (props.error) {\n        errorMessage = <Typography\n            className={classes.error}\n            align={\"center\"}\n            variant={\"subtitle1\"}\n            color={\"secondary\"}>\n            {props.error.message}\n        </Typography>\n    }\n\n    return (\n        <Aux>\n            {errorMessage}\n            <FormGroup>\n                {props.inputFields.map((input, i) => (\n                    <Box key={`${input.name} ${i + 1}`}>\n                        <TextField\n                            autoFocus\n                            className={classes.inputField}\n                            margin={\"normal\"}\n                            label={`${input.name} ${i + lengthOfExistingTargetList + 1}`}\n                            value={input.value}\n                            onChange={(event) => onInputChangeHandler(event, i)}/>\n\n                        <DeleteIcon deleteTargetInput={() => onDeleteTargetInput(i)}/>\n\n                    </Box>\n                ))}\n            </FormGroup>\n\n            <AddIcon addTargetInput={onAddTargetInput}/>\n\n        </Aux>\n\n    )\n}\n\nexport default TargetFormInDialog\n","import React, {useState} from \"react\";\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    editIcon: {\n        color: \"black\",\n        fontSize: 25,\n        cursor: \"pointer\"\n    },\n}))\n\nconst EditIcon = (props) => {\n\n    const classes = useStyles()\n\n    let editIcon;\n\n    const [toggleEditIcon, setToggleEditIcon] = useState(true)\n\n    if (toggleEditIcon) {\n        editIcon = <EditTwoToneIcon\n            className={classes.editIcon}/>\n    } else {\n        editIcon = <EditRoundedIcon\n            className={classes.editIcon}/>\n    }\n\n    const handleToggleEditIcon = () => {\n        setToggleEditIcon(prevState => !prevState)\n    }\n\n    return (\n        <span onMouseEnter={handleToggleEditIcon} onMouseLeave={handleToggleEditIcon}>\n            {editIcon}\n        </span>\n    )\n}\n\nexport default EditIcon\n","import React, {useState} from \"react\";\nimport NavigateBeforeRoundedIcon from '@material-ui/icons/NavigateBeforeRounded';\nimport NavigateBeforeTwoToneIcon from '@material-ui/icons/NavigateBeforeTwoTone';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    NavigateBackIcon: {\n        position:\"relative\",\n        top: 3,\n        right: 1,\n        color: \"black\",\n        fontSize: 25,\n        cursor: \"pointer\"\n    },\n}))\n\nconst NavigateBackIcon = (props) => {\n\n    const classes = useStyles()\n\n    let NavigateBackIcon;\n\n    const [toggleNavigateBackIcon, setToggleNavigateBackIcon] = useState(true)\n\n    if (toggleNavigateBackIcon) {\n        NavigateBackIcon = <NavigateBeforeTwoToneIcon\n            className={classes.NavigateBackIcon}/>\n    } else {\n        NavigateBackIcon = <NavigateBeforeRoundedIcon\n            className={classes.NavigateBackIcon}/>\n    }\n\n    const handleToggleNavigateBackIcon = () => {\n        setToggleNavigateBackIcon(prevState => !prevState)\n    }\n\n    return (\n        <span onMouseEnter={handleToggleNavigateBackIcon} onMouseLeave={handleToggleNavigateBackIcon}>\n            {NavigateBackIcon}\n        </span>\n    )\n}\n\nexport default NavigateBackIcon\n","import React, {useEffect, useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as actions from '../../store/actions/index'\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TargetFormInDialog from \"../targetForm/TargetFormInDialog\";\nimport Loading from \"../UI/loading/Loading\";\nimport Aux from \"../../hoc/Aux\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from \"../UI/editIcon/EditIcon\";\nimport Box from \"@material-ui/core/Box\";\nimport DeleteIcon from \"../UI/deleteIcon/DeleteIcon\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport NavigateBackIcon from \"../UI/navigateBackIcon/NavigateBackIcon\";\n\nconst TargetsList = (props) => {\n\n    const hasTargetList = useSelector(state => state.tl.targetForm.length !== 0)\n    const isAuthenticated = useSelector(state => state.auth.tokenId !== null)\n    const targetList = useSelector(state => state.tl.targetForm)\n\n    const useStyles = makeStyles(theme => ({\n        formControlLabel: {\n            width: `75%`,\n        },\n        box: {\n            height: 50,\n        }\n    }))\n\n    const classes = useStyles()\n\n    const styles = (theme) => ({\n        root: {\n            margin: 0,\n            padding: theme.spacing(2),\n        },\n        closeButton: {\n            display: ((!hasTargetList && isAuthenticated) || !isAuthenticated) ? \"none\" : \"inline-block\",\n            position: 'absolute',\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n        },\n    });\n\n    const clickBackIconHandler = () => {\n        setExitingTargetList([...targetList])\n        setEditMode(prevState => !prevState)\n    }\n\n    const DialogTitle = withStyles(styles)((props) => {\n        const {children, classes, onClose, ...other} = props;\n        return (\n            <MuiDialogTitle disableTypography className={classes.root} {...other}>\n                <Typography variant=\"h6\">{children}</Typography>\n                <IconButton onClick={clickBackIconHandler} className={classes.closeButton}>\n                    {editMode ? <NavigateBackIcon/> : <EditIcon/>}\n                </IconButton>\n            </MuiDialogTitle>\n        );\n    });\n\n    const dispatch = useDispatch()\n\n    const open = useSelector(state => state.tl.open)\n    const noOfTargets = useSelector(state => state.tl.targetForm.length)\n    const loading = useSelector(state => state.tl.loading)\n    const isTargetFormPosted = useSelector(state => state.tl.isTargetFormPosted)\n\n    const prevDayPendingTargets = useSelector(state => state.tl.prevDayPendingTargets)\n\n    const userId = useSelector(state => state.auth.userId)\n\n    const id = localStorage.getItem(\"id\")\n\n    const onSubmitTargetList = (noOfTargetsAchieved) => dispatch(actions.onSubmitTargetList(userId, existingTargetList, noOfTargetsAchieved, noOfTargets))\n    const onUpdateTargetList = (noOfTargetsAchieved) => dispatch(actions.onUpdateTargetList(userId, existingTargetList, noOfTargetsAchieved, noOfTargets))\n    const postTargetForm = () => dispatch(actions.onPostTargetForm(userId, addedTargetList))\n    const onEditTargetForm = (editedTargetList, noOfTargetsAchieved, noOfTargets) => dispatch(actions.onEditTargetForm(userId, editedTargetList, noOfTargetsAchieved, noOfTargets))\n\n    const [existingTargetList, setExitingTargetList] = useState([...targetList]);\n    const [addedTargetList, setAddedTargetList] = useState([]);\n    const [disableSaveButton, setDisableSaveButton] = useState(true)\n    const [disableEditButton, setDisableEditButton] = useState(true)\n    const [disableSubmitButton, setDisableSubmitButton] = useState(true)\n    const [editMode, setEditMode] = useState(false)\n\n    const agreedOnAddingPrevPendingTargets = localStorage.getItem(\"agreedOnAddingPrevPendingTargets\")\n\n    useEffect(() => {\n        if (agreedOnAddingPrevPendingTargets) {\n            setAddedTargetList([...prevDayPendingTargets])\n        }\n        return () => {\n            localStorage.removeItem(\"agreedOnAddingPrevPendingTargets\")\n            setAddedTargetList([])\n        }\n    }, [agreedOnAddingPrevPendingTargets, prevDayPendingTargets])\n\n    useEffect(() => {\n        setExitingTargetList(targetList)\n    }, [targetList])\n\n    useEffect(() => {\n        if (addedTargetList.length) {\n            let c = 0;\n            addedTargetList.map(ip => {\n                if (ip.value) {\n                    c++;\n                }\n                return 0\n            })\n            if (c === addedTargetList.length) {\n                setDisableSaveButton(false)\n            } else {\n                setDisableSaveButton(true)\n            }\n        } else {\n            setDisableSaveButton(true)\n        }\n    }, [addedTargetList])\n\n    useEffect(() => {\n        const inputs = [...existingTargetList, ...addedTargetList]\n        if (inputs.length) {\n            let c = 0;\n            inputs.map(ip => {\n                if (ip.value) {\n                    c++;\n                }\n                return 0\n            })\n            if (c === inputs.length) {\n                setDisableEditButton(false)\n            } else {\n                setDisableEditButton(true)\n            }\n        } else {\n            setDisableEditButton(true)\n        }\n    }, [existingTargetList, addedTargetList])\n\n    useEffect(() => {\n        let c = 0;\n        existingTargetList.map(ip => {\n            if (!ip.checked) {\n                c++;\n            }\n            return 0\n        })\n        if (c === existingTargetList.length) {\n            setDisableSubmitButton(true)\n        } else {\n            setDisableSubmitButton(false)\n        }\n    }, [existingTargetList])\n\n    const targetFormChangeHandler = (inputs) => {\n        setAddedTargetList(inputs)\n    }\n\n    const onCheckedHandler = (index) => {\n        const inputs = [...existingTargetList]\n        const input = {...inputs[index]}\n        input.checked = !input.checked\n        inputs.splice(index, 1, input)\n        setExitingTargetList(inputs)\n    }\n\n    const onDeleteExistingTarget = (index) => {\n        const inputs = [...existingTargetList]\n        inputs.splice(index, 1)\n        setExitingTargetList(inputs)\n    }\n\n    const onSubmitHandler = () => {\n        let x = 0;\n        existingTargetList.map(target => {\n            if (target.checked) {\n                x++;\n            }\n            return 0;\n        })\n        localStorage.setItem(\"noOfTargetsAchieved\", x)\n        localStorage.setItem(\"noOfTargets\", existingTargetList.length)\n        localStorage.setItem(\"existingTargetList\", JSON.stringify(existingTargetList))\n        if (id) {\n            onUpdateTargetList(x)\n        } else {\n            onSubmitTargetList(x);\n        }\n        dispatch(actions.closeTargetList())\n    }\n\n    const onSaveHandler = () => {\n        localStorage.removeItem(\"prevDayPendingTargets\")\n        postTargetForm()\n    }\n\n    const onEditHandler = () => {\n        const editedTargetList = [...existingTargetList, ...addedTargetList]\n        let noOfTargetsAchieved = 0\n        editedTargetList.map(ip => {\n            if (ip.checked) {\n                noOfTargetsAchieved++;\n            }\n            return 0\n        })\n        const noOfTargets = editedTargetList.length\n        onEditTargetForm(editedTargetList, noOfTargetsAchieved, noOfTargets)\n    }\n\n    const onLoginHandler = () => {\n        props.history.push('/signin')\n        dispatch(actions.closeTargetList())\n    }\n\n    const handleClose = () => {\n        dispatch(actions.closeTargetList())\n    }\n\n    let form = <FormGroup>\n        {existingTargetList.map((target, i) => (\n            <Box my={1} key={`${target.name} ${i + 1}`} className={classes.box}>\n                <FormControlLabel\n                    className={classes.formControlLabel}\n                    control={<Checkbox\n                        disabled={editMode}\n                        checked={target.checked}\n                        onChange={() => onCheckedHandler(i)}\n                        name={target.value}/>}\n                    label={target.value}\n                />\n                <DeleteIcon\n                    display={editMode ? \"inline-block\" : \"none\"}\n                    deleteTargetInput={() => onDeleteExistingTarget(i)}\n                    top={8}\n                    right={5}/>\n            </Box>\n        ))}\n        {editMode ? <TargetFormInDialog\n            lengthOfExistingTargetList={existingTargetList.length}\n            inputFields={addedTargetList}\n            targetFormChange={targetFormChangeHandler}/> : null}\n    </FormGroup>\n    let dialogContentText = \"Check your completed task!\"\n    let button = <Button disabled={disableSubmitButton} onClick={onSubmitHandler} variant={\"contained\"} color=\"primary\">\n        {(id) ? \"Update\" : \"Submit\"}\n    </Button>\n\n    if (!hasTargetList && isAuthenticated) {\n        form = <TargetFormInDialog\n            inputFields={addedTargetList}\n            targetFormChange={targetFormChangeHandler}/>\n\n        dialogContentText = \"Make your to-dos for today!\"\n\n        button = <Button disabled={disableSaveButton} variant={\"contained\"} onClick={onSaveHandler}\n                         color=\"primary\">Save</Button>\n        if (loading) {\n            button = <Loading size={25} thickness={6} timer={50} p={2}/>\n        }\n    }\n\n    if (editMode) {\n        dialogContentText = \"Edit your to-do list\"\n\n        button = <Button disabled={disableEditButton} variant={\"contained\"} onClick={onEditHandler}\n                         color=\"primary\">Edit</Button>\n        if (loading) {\n            button = <Loading size={25} thickness={6} timer={50} p={2}/>\n        }\n\n        if (isTargetFormPosted) {\n            setEditMode(false)\n        }\n    }\n\n    if (!isAuthenticated) {\n        dialogContentText = \"Login to see your To-dos\"\n        button = <Button onClick={onLoginHandler} variant={\"contained\"} color=\"primary\">Login</Button>\n    }\n\n    if (isTargetFormPosted) {\n        dispatch(actions.postTargetFormReset())\n        setAddedTargetList([])\n    }\n\n    return (\n        <Aux>\n            <Dialog open={open} onClose={handleClose} fullWidth>\n                <DialogTitle>\n                    To-Do List\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {dialogContentText}\n                    </DialogContentText>\n                    {form}\n                </DialogContent>\n                <DialogActions>\n                    \n                    <Button\n                        disabled={loading}\n                        onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    {button}\n                </DialogActions>\n            </Dialog>\n        </Aux>\n    )\n}\n\nexport default TargetsList\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useSelector} from \"react-redux\";\n\nconst Date = (props) => {\n\n    const {styled} = props\n\n    const useStyles = makeStyles(theme => ({\n\n        date: {\n            \"&:hover\": {\n                cursor: \"pointer\",\n                border: `1px solid rgb(201, 201, 201, 0.6)`,\n                borderRadius: `100%`,\n                padding: 10,\n                backgroundColor: `rgb(201, 201, 201, 0.6)`,\n            }\n        },\n\n        currentDate: {\n            border: `2px solid rgb(128,0,128)`,\n            borderRadius: `100%`,\n            padding: 10,\n        },\n\n        low: {\n            cursor: \"pointer\",\n            borderRadius: `100%`,\n            padding: 10,\n            backgroundColor: `rgb(255, 0, 0, 0.5)`\n        },\n\n        medium: {\n            cursor: \"pointer\",\n            // border: `1px solid rgb(255,165,0, 0.5)`,\n            borderRadius: `100%`,\n            padding: 10,\n            backgroundColor: `rgb(255,165,0, 0.5)`\n        },\n\n        high: {\n            cursor: \"pointer\",\n            borderRadius: `100%`,\n            padding: 10,\n            backgroundColor: `rgb(0,128,0, 0.5)`\n        },\n\n        allDone: {\n            cursor: \"pointer\",\n            borderRadius: `100%`,\n            padding: 10,\n            backgroundColor: \"#2e7d32\",\n            color: \"white\",\n            fontWeight: \"bold\"\n        }\n    }))\n\n    const classes = useStyles()\n\n    const currentDate = useSelector(state => state.cal.currentDate)\n\n    let currentDateStyle = \"\"\n    if(currentDate === props.date){\n        currentDateStyle = \"currentDate\"\n    }\n\n    return (\n        <span\n            className={classes[styled] + \" \" + classes[currentDateStyle]}>\n            {props.date}\n        </span>\n    )\n}\n\nexport default Date\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst AlertDialogBox = (props) => {\n\n    const handleClose = () => {\n        props.closeAlert()\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={handleClose}\n        >\n            <DialogTitle>Hit today's targets!</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    We are humans! we don't have time machine. Hit today's targets.\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Disagree\n                </Button>\n                <Button onClick={handleClose} color=\"primary\">\n                    Agree\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default AlertDialogBox\n","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as actions from '../../store/actions/index'\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Aux from \"../../hoc/Aux\";\nimport Loading from \"../UI/loading/Loading\";\nimport axios from \"../../axios\";\n\nconst useStyles = makeStyles(theme => ({\n    typo: {\n        margin: theme.spacing(2)\n    },\n    error: {\n        margin: 10\n    }\n}))\n\nconst OldTargetList = (props) => {\n\n    const {openOldForm, date} = props\n\n    const dispatch = useDispatch()\n\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const [dateData, setDateData] = useState([])\n\n    const isAuthenticated = useSelector(state => state.auth.tokenId !== null)\n    const userId = useSelector(state => state.auth.userId)\n\n    const month = useSelector(state => state.cal.month)\n    const year = useSelector(state => state.cal.year)\n\n    useEffect(() => {\n        setLoading(true)\n        axios.get(`${userId}/dateData/${year}/${month}/${date}.json`)\n            .then(response => {\n                if (response.data !== null) {\n                    const oldForm = Object.values(response.data)[0].targetForm\n                    setDateData(oldForm)\n                    setLoading(false)\n                } else {\n                    const error = {\n                        message: \"You have not submitted the targets on this day\"\n                    }\n                    setError(error)\n                    setLoading(false)\n                }\n            }).catch(error => {\n            if (error.response) {\n                setError(error.response.data.error)\n            } else {\n                setError(\"\")\n                setLoading(false)\n                dispatch(actions.setSnackbar(\"Internet disconnected!\", \"error\"))\n            }\n        })\n    }, [setLoading, setError, setDateData,userId, year, month, date, dispatch])\n\n    const classes = useStyles()\n\n    let targetsAchievedList = []\n    let targetsNotAchievedList = []\n    dateData.map(data => {\n        (data.checked) ? targetsAchievedList.push(data.value) :\n            targetsNotAchievedList.push(data.value)\n        return 0;\n    })\n\n    const handleClose = () => {\n        props.closeOldForm()\n    };\n\n    let errorMessage = null;\n    if (error) {\n        errorMessage = <Typography\n            className={classes.error}\n            align={\"center\"}\n            variant={\"subtitle1\"}\n            color={\"secondary\"}>\n            {isAuthenticated ? error.message : \"Please login to see your report!\"}\n        </Typography>\n    }\n\n    let dialogContent\n    if (loading) {\n        dialogContent = <Loading timer={10}/>\n    } else {\n        dialogContent = <Aux>\n            {errorMessage}\n            <Typography\n                className={classes.typo}\n                variant={\"h6\"}>\n                Targets-Achieved:\n            </Typography>\n            {targetsAchievedList.map((t, i) => (\n                <Typography\n                    key={t}\n                    className={classes.typo}\n                    variant={\"subtitle1\"}>\n                    &nbsp;&nbsp;&nbsp;{i + 1}.&nbsp;{t}\n                </Typography>\n            ))}\n            <Typography\n                className={classes.typo}\n                variant={\"h6\"}>\n                Targets-NOT-Achieved:\n            </Typography>\n            {targetsNotAchievedList.map((t, i) => (\n                <Typography\n                    key={t}\n                    className={classes.typo}\n                    variant={\"subtitle1\"}>\n                    &nbsp;&nbsp;&nbsp;{i + 1}.&nbsp;{t}\n                </Typography>\n            ))}\n        </Aux>\n    }\n\n    return (\n        <Dialog open={openOldForm} onClose={handleClose} fullWidth>\n            <DialogTitle>Target-List</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    See your targets report on this date\n                </DialogContentText>\n                {dialogContent}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default OldTargetList\n","import React, {useState} from \"react\";\nimport moment from \"moment\";\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport TargetsList from \"../targetsList/TargetsList\";\nimport Aux from '../../hoc/Aux'\nimport Date from \"./Date\";\nimport * as actions from \"../../store/actions\";\nimport AlertDialogBox from \"../targetsList/AlertDialogBox\";\nimport OldTargetList from \"../targetsList/OldTargetList\"\nimport SnackBar from \"../UI/snackBar/SnackBar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n        fontSize: 24\n    },\n    body: {\n        fontSize: 20\n    },\n}))(TableCell);\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        userSelect: \"none\",\n        width: '100%',\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 400,\n    },\n}));\n\nconst weekdays = moment.weekdays();\n\nconst DatesAndDays = (props) => {\n\n    const dispatch = useDispatch();\n\n    const error = useSelector(state => state.cal.error)\n    const month = useSelector(state => state.cal.month)\n    const year = useSelector(state => state.cal.year)\n    const currentMonth = useSelector(state => state.cal.currentMonth)\n    const currentYear = useSelector(state => state.cal.currentYear)\n    const currentDate = useSelector(state => state.cal.currentDate)\n    const firstDayOfMonth = useSelector(state => state.cal.firstDayOfMonth)\n    const daysInMonth = useSelector(state => state.cal.daysInMonth)\n    const monthlyTargetsAchieved = useSelector(state => state.cal.monthlyTargetsAchieved)\n    const monthlyData = useSelector(state => state.cal.monthlyData)\n\n    const openTargetList = useSelector(state => state.tl.open)\n    const isSubmitting = useSelector(state => state.tl.isSubmitting)\n    const isSubmitted = useSelector(state => state.tl.isSubmitted)\n\n    const setMonthlyTargetsAchieved = localData => dispatch(actions.setAllMonthlyData(localData, monthlyData))\n    const saveTargetForm = updatedTargetForm => dispatch(actions.saveTargetForm(updatedTargetForm))\n\n    const [selectedDate, setSelectedDate] = useState(currentDate)\n    const [openAlert, setOpenAlert] = useState(false)\n    const [openOldForm, setOpenOldForm] = useState(false)\n\n    const classes = useStyles();\n\n    let blanks = [];\n    for (let i = 0; i < firstDayOfMonth; i++) {\n        blanks.push(\"\");\n    }\n\n    let dates = [];\n    for (let i = 0; i < daysInMonth; i++) {\n        dates.push(i + 1);\n    }\n\n    const totalSlots = [...blanks, ...dates];\n\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n        if (i % 7 !== 0) {\n            cells.push(row)\n        } else {\n            const insertRow = cells.slice();\n            rows.push(insertRow);\n            cells = [];\n            cells.push(row)\n        }\n        if (i === totalSlots.length - 1) {\n            const insertRow = cells.slice();\n            rows.push(insertRow)\n        }\n    })\n\n    const onDateClick = (d) => {\n        if (!isSubmitting) {\n            const dateClicked = moment([year, month, d])\n            const todayDate = moment([currentYear, currentMonth, currentDate])\n            const diff = dateClicked.diff(todayDate, \"days\")\n            setSelectedDate(d)\n            if (diff === 0) {\n                dispatch(actions.openTargetList())\n            } else if (diff > 0) {\n                setOpenAlert(true)\n            } else {\n                setOpenOldForm(true)\n            }\n        }\n    }\n\n    const getStyle = (n) => {\n        if (n === null) {\n            return \"date\"\n        } else if (n >= 0 && n <= 1) {\n            return \"low\"\n        } else if (n > 1 && n <= 2) {\n            return \"medium\"\n        } else if (n > 2 && n < 3) {\n            return \"high\"\n        } else if (n === 3) {\n            return \"allDone\"\n        }\n    }\n\n    if (isSubmitted) {\n        const noOfTargetsAcheived = localStorage.getItem(\"noOfTargetsAchieved\")\n        const noOfTargets = localStorage.getItem(\"noOfTargets\")\n        const existingTargetList = JSON.parse(localStorage.getItem(\"existingTargetList\"))\n        const localData = [...monthlyTargetsAchieved]\n        const styleNumber = (noOfTargetsAcheived / noOfTargets) * 3\n        localData.splice(currentDate, 1, styleNumber)\n        setMonthlyTargetsAchieved(localData)\n        saveTargetForm(existingTargetList)\n        dispatch(actions.resetSubmission())\n        localStorage.removeItem(\"existingTargetList\")\n        localStorage.removeItem(\"noOfTargetsAchieved\")\n        localStorage.removeItem(\"noOfTargets\")\n    }\n\n    let errorMessage = null;\n    if (error) {\n        errorMessage = <Typography align={\"center\"} variant={\"subtitle1\"} color={\"secondary\"}>\n            {error.message}\n        </Typography>\n    }\n\n    return (\n        <Aux>\n            {errorMessage}\n            <Paper className={classes.root}>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                            {weekdays.map(day => (\n                                <StyledTableCell key={day} align={\"center\"}>{day}</StyledTableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map(row => (\n                            <TableRow key={Math.random()}>\n                                {row.map(d => {\n                                    const n = monthlyTargetsAchieved[d]\n                                    let style = getStyle(n)\n                                    return (\n                                        <Aux key={Math.random()}>\n                                            <StyledTableCell\n                                                onClick={() => onDateClick(d)}\n                                                align={\"center\"}>\n                                                <Date date={d}\n                                                      styled={style}\n                                                />\n                                            </StyledTableCell>\n                                        </Aux>\n                                    )\n                                })}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n            <SnackBar/>\n            {openTargetList ?\n                <TargetsList\n                    {...props}\n                    date={selectedDate}/>\n                : null}\n            {openAlert ? <AlertDialogBox\n                    open={openAlert}\n                    closeAlert={() => setOpenAlert(false)}/>\n                : null}\n            {openOldForm ?\n                <OldTargetList\n                    openOldForm={openOldForm}\n                    date={selectedDate}\n                    closeOldForm={() => setOpenOldForm(false)}/>\n                : null}\n        </Aux>\n    );\n}\n\nexport default DatesAndDays\n","import React from \"react\";\nimport MonthSelector from \"../../components/monthSelector/MonthSelector\";\nimport DatesAndDays from \"../../components/datesAndDays/DatesAndDays\";\nimport Aux from \"../../hoc/Aux\";\nimport AppBar from \"../../components/appbar/Appbar\";\n\nconst Calendar = (props) => {\n\n    return (\n        <Aux>\n            <AppBar {...props}/>\n            <MonthSelector/>\n            <DatesAndDays {...props}/>\n        </Aux>\n    )\n}\n\nexport default Calendar\n\n","import React, {useEffect, useState} from \"react\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as actions from '../../../store/actions'\nimport Button from \"@material-ui/core/Button\";\nimport Appbar from \"../../../components/appbar/Appbar\";\nimport Aux from \"../../../hoc/Aux\";\nimport Loading from \"../../../components/UI/loading/Loading\";\nimport SnackBar from \"../../../components/UI/snackBar/SnackBar\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: 10,\n        minHeight: 300\n    },\n    heading: {\n        fontWeight: \"bold\",\n        margin: 15\n    },\n    formControl: {\n        margin: 15,\n        minWidth: 200\n    },\n    register: {\n        color: \"secondary\",\n        cursor: \"pointer\",\n        \"&:hover\": {\n            color: \"#ad1457\"\n        }\n    },\n    newUser: {\n        margin: 10\n    }\n}))\n\nconst Signin = (props) => {\n\n    const {history} = props\n\n    const dispatch = useDispatch()\n\n    const onSignin = (email, password) => dispatch(actions.auth(email, password, false))\n\n    const isAuthenticated = useSelector(state => state.auth.tokenId !== null)\n    const loading = useSelector(state => state.auth.loading)\n    const error = useSelector(state => state.auth.error)\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false)\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            history.push('/')\n        }\n    }, [isAuthenticated, history])\n\n    const emailChangeHandler = (event) => {\n        setEmail(event.target.value);\n    }\n\n    const passwordChangeHandler = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const showPasswordHandler = () => {\n        setShowPassword(prevState => !prevState)\n    }\n\n    const onRegisterClickHandler = () => {\n        props.history.push('/register');\n    }\n\n    const classes = useStyles()\n\n    let errorMessage = null;\n    if (error) {\n        errorMessage = <Typography align={\"center\"} variant={\"subtitle1\"} color={\"secondary\"}>\n            {error.message}\n        </Typography>\n    }\n\n    return <Aux>\n        <Appbar {...props}/>\n        <Box\n            maxWidth={500}\n            mx={\"auto\"}\n            mt={10}\n            p={3}>\n            <Paper elevation={2} className={classes.paper}>\n                <Typography\n                    className={classes.heading}\n                    variant={\"h4\"}\n                    color={\"primary\"}\n                    align={\"center\"}>\n                    Login\n                </Typography>\n                {errorMessage}\n                {loading ? <Loading timer={10}/> :\n                    <FormGroup>\n                        <FormControl className={classes.formControl} variant={\"outlined\"}>\n                            <InputLabel htmlFor=\"outlined-adornment-Email\">E-mail</InputLabel>\n                            <OutlinedInput\n                                type={\"text\"}\n                                value={email}\n                                onChange={emailChangeHandler}\n                                labelWidth={100}/>\n                        </FormControl>\n                        <FormControl className={classes.formControl} variant={\"outlined\"}>\n                            <InputLabel>Password</InputLabel>\n                            <OutlinedInput\n                                type={showPassword ? \"text\" : \"password\"}\n                                value={password}\n                                onChange={passwordChangeHandler}\n                                labelWidth={100}\n                                endAdornment={\n                                    <InputAdornment position={\"end\"}>\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={showPasswordHandler}\n                                            edge={\"end\"}>\n                                            {showPassword ? <Visibility/> : <VisibilityOff/>}\n                                        </IconButton>\n                                    </InputAdornment>}\n                            />\n                        </FormControl>\n                    </FormGroup>}\n                {loading ? null :\n                    <Box align={\"center\"} my={1} mb={3}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                            onClick={() => onSignin(email, password)}>Login</Button>\n                    </Box>}\n\n                <Typography\n                    className={classes.newUser}\n                    align={\"center\"}\n                    variant={\"h6\"}\n                    color={\"secondary\"}>\n                    <i>New user ? </i><span\n                    onClick={onRegisterClickHandler}\n                    className={classes.register}><u>Register</u></span>\n                </Typography>\n            </Paper>\n        </Box>\n        <SnackBar/>\n    </Aux>\n}\n\nexport default Signin\n","import React, {useCallback, useEffect} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport * as actions from '../../../store/actions/index'\nimport {useDispatch} from \"react-redux\";\n\nconst Logout = () => {\n\n    const dispatch = useDispatch()\n    const onLogout = useCallback(() => dispatch(actions.onLogout(false)), [dispatch])\n\n    useEffect(() => {\n        onLogout()\n    }, [onLogout])\n\n    return (\n        <Redirect to={'/'}/>\n    )\n}\n\nexport default Logout\n\n\n","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport * as actions from '../../store/actions/index'\nimport Zoom from \"@material-ui/core/Zoom\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Zoom ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    typo: {\n        margin: theme.spacing(2)\n    },\n}))\n\nconst PendingTargetsReminder = () => {\n\n    const dispatch = useDispatch()\n\n    const classes = useStyles()\n\n    const prevDayPendingTargets = useSelector(state => state.tl.prevDayPendingTargets)\n    const formId = localStorage.getItem(\"formId\")\n\n    const [pendingTargets, setPendingTargets] = useState([])\n\n    const [open, setOpen] = useState(false)\n\n    useEffect(() => {\n        if(prevDayPendingTargets.length && !formId){\n            setPendingTargets(prevDayPendingTargets)\n            setOpen(true)\n        }\n    }, [prevDayPendingTargets, formId])\n\n    const handleClose = () => {\n        setOpen(false)\n    };\n\n    const handleAgree = () => {\n        localStorage.setItem(\"agreedOnAddingPrevPendingTargets\", true)\n        setOpen(false)\n        dispatch(actions.openTargetList())\n    }\n\n    return (\n        <Dialog\n            open={open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={handleClose}\n        >\n            <DialogTitle>Previous day remaining targets</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    If you want you can add your remaining targets from previous day to the today's targets:\n                </DialogContentText>\n                {pendingTargets.map((t, i) => (\n                    <Typography\n                        key={t.value}\n                        className={classes.typo}\n                        variant={\"subtitle1\"}\n                    >\n                        &nbsp;&nbsp;&nbsp;{i + 1}.&nbsp;{t.value}\n                    </Typography>\n                ))}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Disagree\n                </Button>\n                <Button onClick={handleAgree} color=\"primary\">\n                    Agree\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default PendingTargetsReminder\n","import React, {PureComponent} from 'react';\nimport './MonthlyChart.css'\nimport {AreaChart, Area, XAxis, YAxis, Tooltip} from 'recharts';\nimport Legend from \"recharts/lib/component/Legend\";\n\nclass MonthlyChart extends PureComponent {\n    render() {\n        return (\n            <div className={\"monthly-chart-container\"}>\n                <AreaChart width={900} height={350} data={this.props.data}\n                           margin={{top: 20, right: 30, left: 0, bottom: 0}}>\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#f44336\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#f44336\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#673ab7\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#673ab7\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\"/>\n                    <YAxis/>\n                    <Legend verticalAlign=\"top\" height={30}/>\n                    <Tooltip/>\n                    <Area type=\"monotone\" dataKey=\"# of Targets set\" stroke=\"#f44336\" fillOpacity={1}\n                          fill=\"url(#colorUv)\"/>\n                    <Area type=\"monotone\" dataKey=\"# of Targets Achieved\" stroke=\"#673ab7\" fillOpacity={1}\n                          fill=\"url(#colorPv)\"/>\n                </AreaChart>\n            </div>\n        );\n    }\n}\n\nexport default MonthlyChart\n","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {useSelector} from \"react-redux\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '80%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    done: {\n        color: \"green\"\n    },\n    notDone: {\n        color: \"red\"\n    },\n    statsPaper: {\n        margin: 10,\n        padding: 8\n    }\n}));\n\n\nconst hasTarget = (targetAchievedList, target) => {\n    for (let i = 0; i < targetAchievedList.length; i++) {\n        if (targetAchievedList[i] === target) {\n            return true\n        }\n    }\n    return false\n}\n\nconst getMeLists = list => {\n    let targetsAchievedList = []\n    let temporaryList1 = []\n    list.map(t => {\n        if (t.checked) {\n            targetsAchievedList.push(t.value)\n        } else {\n            temporaryList1.push(t.value)\n        }\n        return 0\n    })\n\n    let temporaryList2 = []\n    temporaryList1.map(t => {\n        if (!hasTarget(targetsAchievedList, t)) {\n            temporaryList2.push(t)\n        }\n        return 0\n    })\n\n    const targetsNotAchievedList = Array.from(new Set(temporaryList2))\n\n    return [targetsAchievedList, targetsNotAchievedList]\n\n}\n\nconst WeekViseReport = () => {\n\n    const classes = useStyles();\n\n    const monthlyDateData = useSelector(state => state.cal.monthlyDateData)\n    const prevMonthDateData = useSelector(state => state.cal.prevMonthDateData)\n\n    const [productivity, setProductivity] = useState(0)\n    const [growthInNoOfTargetsSet, setGrowthInNoOfTargetsSet] = useState(0)\n    const [growthInNoOfTargetsAchieved, setGrowthInNoOfTargetsAchieved] = useState(0)\n\n    useEffect(() => {\n        let list = []\n        const listKey = Object.keys(monthlyDateData)\n        listKey.map(d => {\n            if (monthlyDateData[d]) {\n                const form = Object.values(Object.values(monthlyDateData[d])[0])[0]\n                list = [...list, ...form]\n            }\n            return 0\n        })\n        const [targetsAchievedList, targetsNotAchievedList] = getMeLists(list)\n\n        const prod = ((targetsAchievedList.length / (targetsAchievedList.length + targetsNotAchievedList.length)) * 100).toFixed(2)\n        setProductivity(prod)\n\n        let prevList = []\n        const prevListKey = Object.keys(prevMonthDateData)\n        prevListKey.map(d => {\n            if (prevMonthDateData[d]) {\n                const form = Object.values(Object.values(prevMonthDateData[d])[0])[0]\n                prevList = [...prevList, ...form]\n            }\n            return 0\n        })\n        const [prevTargetsAchievedList, prevTargetsNotAchievedList] = getMeLists(prevList)\n\n        const stat1 = ((((targetsAchievedList.length + targetsNotAchievedList.length)\n            - (prevTargetsAchievedList.length + prevTargetsNotAchievedList.length))\n            / (targetsAchievedList.length + targetsNotAchievedList.length)) * 100).toFixed(1)\n\n        const stat2 = (((targetsAchievedList.length - prevTargetsAchievedList.length)\n            / targetsAchievedList.length) * 100).toFixed(1)\n\n        setGrowthInNoOfTargetsSet(stat1)\n        setGrowthInNoOfTargetsAchieved(stat2)\n\n    }, [monthlyDateData, prevMonthDateData, setProductivity])\n\n    return (\n        <Box my={5}>\n            <Grid container justify={\"space-evenly\"}>\n                <Grid item>\n                    <Paper elevation={3} className={classes.statsPaper}>\n                        <Typography>\n                            Productivity: {productivity}%\n                        </Typography>\n                    </Paper>\n                </Grid>\n                <Grid item>\n                    <Paper elevation={3} className={classes.statsPaper}>\n                        <Typography>\n                            Growth in # of targets set: {growthInNoOfTargetsSet}%\n                        </Typography>\n                    </Paper>\n                </Grid>\n                <Grid item>\n                    <Paper elevation={3} className={classes.statsPaper}>\n                        <Typography>\n                            Growth in # of targets achieved: {growthInNoOfTargetsAchieved}%\n                        </Typography>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default WeekViseReport\n","import React, {useEffect, useState} from \"react\";\nimport Appbar from \"../../components/appbar/Appbar\";\nimport Aux from \"../../hoc/Aux\";\nimport MonthSelector from \"../../components/monthSelector/MonthSelector\";\nimport {useSelector} from \"react-redux\";\nimport SnackBar from \"../../components/UI/snackBar/SnackBar\";\nimport MonthlyChart from \"../../components/charts/monthlyChart/MonthlyChart\";\nimport MonthlyStats from \"../../components/monthlyStats/monthlyStats\";\n// import WorkDone from \"../../components/workDone/workDone\";\n\nconst Dashboard = (props) => {\n\n    const monthlyData = useSelector(state => state.cal.monthlyData)\n    const daysInMonth = useSelector(state => state.cal.daysInMonth)\n    const currentDate = useSelector(state => state.cal.currentDate)\n    const currentMonth = useSelector(state => state.cal.currentMonth)\n    const month = useSelector(state => state.cal.month)\n\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        let localData = []\n\n        for (let i = 0; i < daysInMonth + 1; i++) {\n            let tempData = {\n                \"name\": i,\n                \"# of Targets set\": 0,\n                \"# of Targets Achieved\": 0,\n            }\n            localData.push(tempData)\n        }\n        if (monthlyData.length) {\n            monthlyData.map(d => {\n                if (d.date !== currentDate) {\n                    localData.splice(d.date, 1, {\n                        \"name\": d.date,\n                        \"# of Targets set\": d.noOfTargets,\n                        \"# of Targets Achieved\": d.noOfTargetsAcheived,\n                    })\n                } else {\n                    localData.splice(d.date, 1, {\n                        \"name\": d.date,\n                        \"# of Targets set\": `kaam toh krlo phle`,\n                        \"# of Targets Achieved\": `kal dekhna`,\n                    })\n                }\n                return 0\n            })\n        }\n        if (month === currentMonth) {\n            const currentLocalData = localData.slice(0, currentDate + 1)\n            setData(currentLocalData)\n        } else {\n            setData(localData)\n        }\n\n    }, [monthlyData, setData, daysInMonth, currentMonth, currentDate, month])\n\n    return (\n        <Aux>\n            <Appbar {...props}/>\n            <MonthSelector/>\n            <MonthlyChart data={data}/>\n            <MonthlyStats/>\n            {/*<WorkDone/>*/}\n            <SnackBar/>\n        </Aux>\n    )\n}\n\nexport default Dashboard\n","import React, {useCallback, useEffect, Suspense} from 'react';\nimport './App.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as actions from './store/actions/index'\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom'\nimport Calendar from \"./containers/Calendar/Calender\";\nimport Signin from \"./containers/Auth/signin/Signin\";\nimport Logout from \"./containers/Auth/logout/Logout\";\nimport PendingTargetsReminder from \"./components/pendingTargetsReminder/PendingTargetsReminder\";\nimport Aux from \"./hoc/Aux\";\nimport Dashboard from \"./containers/Dashboard/Dashboard\";\n\nconst App = () => {\n\n    const Register = React.lazy(() => {\n        return import(\"./containers/Auth/register/Register\")\n    })\n\n    const userId = useSelector(state => state.auth.userId)\n\n    const dispatch = useDispatch();\n    const initCalendar = useCallback(() => dispatch(actions.initCalendar()), [dispatch])\n    const authCheck = useCallback(() => dispatch(actions.authCheckStatus()), [dispatch])\n    const getTargetForm = useCallback((userId) => dispatch(actions.onGetTargetForm(userId)), [dispatch])\n    const getMonthlyData = useCallback((userId) => dispatch(actions.onGetMonthlyData(userId)), [dispatch])\n    const getPersonalDetails = useCallback((userId) => dispatch(actions.onGetPersonalDetails(userId)), [dispatch])\n    const isAuthenticated = useSelector(state => state.auth.tokenId !== null)\n\n    useEffect(() => {\n        initCalendar()\n        authCheck()\n    }, [authCheck, initCalendar])\n\n    useEffect(() => {\n        getMonthlyData(userId)\n    }, [userId, getMonthlyData])\n\n    useEffect(() => {\n        getPersonalDetails(userId)\n    }, [userId, getPersonalDetails])\n\n    useEffect(() => {\n        getTargetForm(userId)\n    }, [userId, getTargetForm])\n\n    let routes = <Switch>\n        <Route path={'/signin'} component={Signin}/>\n        <Route path={'/register'} render={(props => <Register {...props}/>)}/>\n        <Route path={'/dashboard'} component={Dashboard}/>\n        <Route path={'/'} exact component={Calendar}/>\n        <Redirect to={'/'}/>\n    </Switch>\n\n    if (isAuthenticated) {\n        routes = <Switch>\n            <Route path={'/register'} render={(props => <Register {...props}/>)}/>\n            <Route path={'/logout'} component={Logout}/>\n            <Route path={'/dashboard'} component={Dashboard}/>\n            <Route path={'/'} exact component={Calendar}/>\n            <Redirect to={'/'}/>\n        </Switch>\n    }\n\n    return (\n        <Aux>\n            <PendingTargetsReminder/>\n            <Suspense fallback={<h3>Loading...</h3>}>\n                {routes}\n            </Suspense>\n        </Aux>\n    );\n}\n\nexport default withRouter(App);\n","export const updateObject = (oldObject, updatedObject) => {\n    return{\n        ...oldObject,\n        ...updatedObject\n    }\n}","import moment from \"moment\";\nimport * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from \"../../shared/utility\";\n\nconst initialState = {\n    dateContext: null,\n    month: null,\n    year: null,\n    daysInMonth: null,\n    currentDateContext: null,\n    currentDate: null,\n    currentMonth: null,\n    currentYear: null,\n    firstDayOfMonth: null,\n    isFetchingData: false,\n    error: null,\n    monthlyTargetsAchieved: [],\n    monthlyData: [],\n    monthlyDateData: {},\n    prevMonthDateData: {}\n}\n\nconst setNextMonth = state => {\n\n    let dateContext = Object.assign({}, state.dateContext);\n    dateContext = moment(dateContext).add(1, \"month\");\n    const firstDay = moment(dateContext).startOf('month').format('d');\n\n    return updateObject(state, {\n        dateContext: dateContext,\n        month: dateContext.month(),\n        year: dateContext.format(\"Y\"),\n        daysInMonth: dateContext.daysInMonth(),\n        firstDayOfMonth: firstDay,\n    })\n};\n\nconst setPrevMonth = state => {\n\n    let dateContext = Object.assign({}, state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"month\");\n    const firstDay = moment(dateContext).startOf('month').format('d');\n\n    return updateObject(state, {\n        dateContext: dateContext,\n        month: dateContext.month(),\n        year: dateContext.format(\"Y\"),\n        daysInMonth: dateContext.daysInMonth(),\n        firstDayOfMonth: firstDay,\n    })\n}\n\nconst setMonthlyDataStart = state => {\n\n    return updateObject(state, {\n        isFetchingData: true,\n    })\n}\n\nconst setMonthlyDataSuccess = (state, actions) => {\n\n    let data = [...state.monthlyTargetsAchieved]\n    const monthlyData = actions.monthlyData\n    monthlyData.map(d => {\n        const noOfTargets = d.noOfTargets\n        const noOfTargetsAchieved = d.noOfTargetsAcheived\n        const styleNumber = (noOfTargetsAchieved / noOfTargets) * 3\n        data.splice(d.date, 1, styleNumber)\n        return 0;\n    })\n    localStorage.setItem('monthlyTargetsAchieved', JSON.stringify(data))\n    return updateObject(state, {\n        monthlyData: actions.monthlyData,\n        monthlyTargetsAchieved: data,\n        isFetchingData: false\n    })\n}\n\nconst setMonthlyDataFail = (state, actions) => {\n    return updateObject(state, {\n        isFetchingData: false,\n        error: actions.error\n    })\n}\n\nconst setAllMonthlyData = (state, actions) => {\n    if (actions.monthlyTargetsAchieved === null) {\n\n        const monthlyTargetsAchieved = new Array(state.daysInMonth + 1).fill(null)\n\n        localStorage.setItem('monthlyTargetsAchieved', JSON.stringify(monthlyTargetsAchieved))\n        return updateObject(state, {\n            monthlyData: actions.monthlyData,\n            monthlyTargetsAchieved: monthlyTargetsAchieved\n        })\n    } else {\n        localStorage.setItem('monthlyTargetsAchieved', JSON.stringify(actions.monthlyTargetsAchieved))\n        return updateObject(state, {\n            monthlyData: actions.monthlyData,\n            monthlyTargetsAchieved: actions.monthlyTargetsAchieved\n        })\n    }\n}\n\nconst setMonthlyDateData = (state, actions) => {\n    if (actions.monthlyDateData) {\n        return updateObject(state, {\n            monthlyDateData: actions.monthlyDateData\n        })\n    } else {\n        return state\n    }\n}\n\nconst setPrevMonthDateData = (state, actions) => {\n    if (actions.prevMonthDateData) {\n        return updateObject(state, {\n            prevMonthDateData: actions.prevMonthDateData\n        })\n    } else {\n        return state\n    }\n}\n\nconst initCalendar = state => {\n\n    let dateContext = moment();\n    const firstDay = moment(dateContext).startOf('month').format('d');\n\n    return updateObject(state, {\n        dateContext: dateContext,\n        month: dateContext.month(),\n        year: dateContext.format(\"Y\"),\n        daysInMonth: dateContext.daysInMonth(),\n        currentDateContext: dateContext,\n        currentDate: dateContext.get(\"date\"),\n        currentMonth: dateContext.month(),\n        currentYear: dateContext.format(\"Y\"),\n        firstDayOfMonth: firstDay,\n    })\n}\n\nconst reducer = (state = initialState, actions) => {\n\n    switch (actions.type) {\n        case actionTypes.SET_NEXT_MONTH:\n            return setNextMonth(state);\n        case actionTypes.SET_PREV_MONTH:\n            return setPrevMonth(state);\n        case actionTypes.INIT_CALENDAR :\n            return initCalendar(state);\n        case actionTypes.SET_MONTHLY_DATA_START:\n            return setMonthlyDataStart(state)\n        case actionTypes.SET_MONTHLY_DATA_SUCCESS:\n            return setMonthlyDataSuccess(state, actions)\n        case actionTypes.SET_MONTHLY_DATA_FAIL:\n            return setMonthlyDataFail(state, actions)\n        case actionTypes.SET_ALL_MONTHLY_DATA:\n            return setAllMonthlyData(state, actions)\n        case actionTypes.SET_MONTHLY_DATE_DATA:\n            return setMonthlyDateData(state, actions)\n        case actionTypes.SET_PREV_MONTH_DATE_DATA:\n            return setPrevMonthDateData(state, actions)\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from \"../../shared/utility\";\nimport * as actionsTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n    open: false,\n    isSubmitting: false,\n    isSubmitted: false,\n    error: null,\n    loading: false,\n    isTargetFormPosted: false,\n    targetForm: [],\n    prevDayPendingTargets: []\n}\n\nconst openTargetList = state => {\n    return updateObject(state, {\n        open: true\n    })\n}\n\nconst closeTargetList = state => {\n    return updateObject(state, {\n        open: false\n    })\n}\n\nconst submitTargetFormStart = state => {\n    return updateObject(state, {\n        isSubmitting: true\n    })\n}\n\nconst submitTargetFormSuccess = state => {\n    return updateObject(state, {\n        isSubmitting: false,\n        isSubmitted: true\n    })\n}\n\nconst submitTargetFormFail = (state, actions) => {\n    return updateObject(state, {\n        isSubmitting: false,\n        error: actions.error\n    })\n}\n\nconst resetSubmission = state => {\n    return updateObject(state, {\n        isSubmitting: false,\n        isSubmitted: false,\n        error: null\n    })\n}\n\nconst postTargetFormStart = (state) => {\n    return updateObject(state, {\n        loading: true\n    })\n}\n\nconst postTargetFormSuccess = (state) => {\n    return updateObject(state, {\n        loading: false,\n        isTargetFormPosted: true\n    })\n}\n\nconst postTargetFormFail = (state, actions) => {\n    return updateObject(state, {\n        loading: false,\n        error: actions.error\n    })\n}\n\nconst postTargetFormReset = state => {\n    return updateObject(state, {\n        loading: false,\n        error: null,\n        isTargetFormPosted: false,\n    })\n}\n\nconst saveTargetForm = (state, actions) => {\n    return updateObject(state, {\n        targetForm: actions.targetForm\n    })\n}\n\nconst savePrevDayPendingTargets = (state, actions) => {\n    return updateObject(state, {\n        prevDayPendingTargets: actions.prevDayPendingTargets\n    })\n}\n\nconst reducer = (state = initialState, actions) => {\n    switch (actions.type) {\n        case actionTypes.OPEN_TARGET_LIST:\n            return openTargetList(state)\n        case actionTypes.CLOSE_TARGET_LIST:\n            return closeTargetList(state)\n        case actionTypes.SUBMIT_OR_UPDATE_TARGET_LIST_START:\n            return submitTargetFormStart(state)\n        case actionTypes.SUBMIT_OR_UPDATE_TARGET_LIST_SUCCESS:\n            return submitTargetFormSuccess(state)\n        case actionTypes.SUBMIT_OR_UPDATE_TARGET_LIST_FAIL:\n            return submitTargetFormFail(state, actions)\n        case actionTypes.RESET_SUBMISSION:\n            return resetSubmission(state)\n        case actionsTypes.SAVE_TARGET_FORM:\n            return saveTargetForm(state, actions)\n        case actionsTypes.POST_TARGET_FORM_START:\n            return postTargetFormStart(state)\n        case actionsTypes.POST_TARGET_FORM_SUCCESS:\n            return postTargetFormSuccess(state, actions)\n        case actionsTypes.POST_TARGET_FORM_FAIL:\n            return postTargetFormFail(state, actions)\n        case actionsTypes.SAVE_PREV_DAY_PENDING_TARGET:\n            return savePrevDayPendingTargets(state, actions)\n        case actionsTypes.POST_TARGET_FORM_RESET:\n            return postTargetFormReset(state)\n        default:\n            return state\n    }\n}\n\nexport default reducer\n\n","import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from \"../../shared/utility\";\n\nconst initialState = {\n    tokenId: null,\n    userId: null,\n    loading: false,\n    error: null,\n}\n\nconst onAuthStart = state => {\n    return updateObject(state, {loading: true, error: null})\n}\n\nconst onAuthSuccess = (state, actions) => {\n    return updateObject(state, {\n        tokenId: actions.tokenId,\n        userId: actions.userId,\n        loading: false\n    })\n}\n\nconst onAuthFail = (state, actions) => {\n    return updateObject(state, {\n        loading: false,\n        error: actions.error\n    })\n}\n\nconst onLogout = state => {\n    return updateObject(state, {\n        tokenId: null,\n        userId: null,\n        loading: false,\n        error: null\n    })\n}\n\nconst onSetErrorToNull = state => {\n    return updateObject(state, {error: null})\n}\n\nconst reducer = (state = initialState, actions) => {\n    switch (actions.type) {\n        case actionTypes.AUTH_START: return onAuthStart(state)\n        case actionTypes.AUTH_SUCCESS: return onAuthSuccess(state, actions)\n        case actionTypes.AUTH_FAIL: return onAuthFail(state,actions)\n        case actionTypes.SET_ERROR_TO_NULL: return onSetErrorToNull(state)\n        case actionTypes.LOGOUT: return onLogout(state)\n        default: return state\n    }\n}\n\nexport default reducer\n","import * as actionsTypes from '../actions/actionTypes'\nimport {updateObject} from \"../../shared/utility\";\n\nconst initialState = {\n    name: \"\",\n    gender: \"\",\n    email: \"\",\n}\n\nconst savePersonalDetails = (state, actions) => {\n    return updateObject(state, {\n        name: actions.name,\n        gender: actions.gender,\n        email: actions.email,\n    })\n}\nconst reducer = (state = initialState, actions) => {\n    switch (actions.type) {\n        case actionsTypes.SAVE_PERSONAL_DETAILS:\n            return savePersonalDetails(state, actions)\n        default:\n            return state\n    }\n}\n\nexport default reducer\n","import * as actionsTypes from '../actions/actionTypes'\nimport {updateObject} from \"../../shared/utility\";\n\nconst initialState = {\n    open: false,\n    message: \"\",\n    severity: \"\",\n    autoHideDuration: null\n}\n\nconst setSnackbar = (state, actions) => {\n    return updateObject(state, {\n        open: true,\n        message: actions.message,\n        severity: actions.severity,\n        autoHideDuration: actions.autoHideDuration\n    })\n}\n\nconst removeSnack = state => {\n    return updateObject(state, {\n        open: false,\n        message: \"\",\n        severity: \"\",\n        autoHideDuration: null\n    })\n}\n\nconst reducer = (state = initialState, actions) => {\n    switch (actions.type) {\n        case actionsTypes.SET_SNACKBAR:\n            return setSnackbar(state, actions)\n        case actionsTypes.REMOVE_SNACKBAR:\n            return removeSnack()\n        default:\n            return state\n    }\n}\n\nexport default reducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, applyMiddleware, compose, combineReducers} from \"redux\"\nimport thunk from 'redux-thunk'\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport monthSelectorReducer from './store/reducers/calendar'\nimport targetListReducer from './store/reducers/targetList'\nimport signinReducer from './store/reducers/auth'\nimport registerReducer from './store/reducers/registerSummary'\nimport networkErrorReducer from \"./store/reducers/snackbar\"\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n\nconst rootReducer = combineReducers({\n    cal: monthSelectorReducer,\n    tl: targetListReducer,\n    auth: signinReducer,\n    register: registerReducer,\n    snk: networkErrorReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from \"@material-ui/core/Box\";\n\nconst Loading = (props) => {\n    const [progress, setProgress] = React.useState(0);\n\n    React.useEffect(() => {\n        function tick() {\n            // reset when reaching 100%\n            setProgress((oldProgress) => (oldProgress >= 100 ? 0 : oldProgress + 1));\n        }\n\n        const timer = setInterval(tick, props.timer);\n        return () => {\n            clearInterval(timer);\n        };\n    }, [props.timer]);\n\n    return (\n        <Box\n            p={props.p ? props.p : 4}\n            align={\"center\"}>\n            <CircularProgress\n                color={\"primary\"}\n                size={props.size ? props.size : 70}\n                thickness={props.thickness ? props.thickness : 4.5}\n                variant=\"indeterminate\"\n                value={progress} />\n        </Box>\n    );\n}\n\nexport default Loading\n","export const SET_NEXT_MONTH = \"SET_NEXT_MONTH\";\nexport const SET_PREV_MONTH = \"SET_PREV_MONTH\";\nexport const INIT_CALENDAR = \"INIT_CALENDAR\";\nexport const SET_MONTHLY_DATA_START = \"SET_MONTHLY_DATA_START\";\nexport const SET_MONTHLY_DATA_SUCCESS = \"SET_MONTHLY_DATA_SUCCESS\";\nexport const SET_MONTHLY_DATA_FAIL = \"SET_MONTHLY_DATA_FAIL\"\nexport const SET_ALL_MONTHLY_DATA = \"SET_ALL_MONTHLY_DATA\"\nexport const SET_MONTHLY_DATE_DATA = \"SET_MONTHLY_DATE_DATA\"\nexport const SET_PREV_MONTH_DATE_DATA = \"SET_PREV_MONTH_DATE_DATA\"\n\nexport const OPEN_TARGET_LIST = \"OPEN_TARGET_LIST\"\nexport const CLOSE_TARGET_LIST = \"CLOSE_TARGET_LIST\"\nexport const SUBMIT_OR_UPDATE_TARGET_LIST_START = \"SUBMIT_OR_UPDATE_TARGET_LIST_START\"\nexport const SUBMIT_OR_UPDATE_TARGET_LIST_SUCCESS = \"SUBMIT_OR_UPDATE_TARGET_LIST_SUCCESS\"\nexport const SUBMIT_OR_UPDATE_TARGET_LIST_FAIL = \"SUBMIT_OR_UPDATE_TARGET_LIST_FAIL\"\nexport const RESET_SUBMISSION = \"RESET_SUBMISSION\"\nexport const SAVE_TARGET_FORM = \"SAVE_TARGET_FORM\";\nexport const SAVE_PREV_DAY_PENDING_TARGET = \"SAVE_PREV_DAY_PENDING_TARGET\"\nexport const POST_TARGET_FORM_START = \"POST_TARGET_FORM_START\";\nexport const POST_TARGET_FORM_SUCCESS = \"POST_TARGET_FORM_SUCCESS\"\nexport const POST_TARGET_FORM_FAIL = \"POST_TARGET_FORM_FAIL\"\nexport const POST_TARGET_FORM_RESET = \"POST_TARGET_FORM_RESET\"\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\nexport const SAVE_PERSONAL_DETAILS = \"SAVE_PERSONAL_DETAILS\";\n\nexport const LOGOUT = 'LOGOUT';\nexport const SET_ERROR_TO_NULL = \"SET_ERROR_TO_NULL\"\n\nexport const SET_SNACKBAR = \"SET_SNACKBAR\"\nexport const REMOVE_SNACKBAR = \"REMOVE_SNACKBAR\"\n"],"sourceRoot":""}